{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat\\\\containers\\\\leftSidebar\\\\contactSearch.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport dateTime from \"./datetime\";\nimport { Nav, TabContent } from \"reactstrap\";\nimport { fetchUsers, setChatWith, setActiveTab, chatededUsers, addNewUSer, removeRecentUser, updateLastMessageTime } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction form() {\n  const dispatch = useDispatch();\n  const jid = useSelector(state => state.user.currentUser.jid);\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\n  const usersP = useSelector(state => state.user.users);\n  const filteredUsers = usersP.length > 0 && usersP[0].filter(user => user.id !== jidLoggedInUser);\n  const recentUsers = useSelector(state => state.user.chatedUsers);\n  const {\n    0: searchTerm,\n    1: setSearch\n  } = useState(null);\n  const {\n    0: chatSubTab,\n    1: setChatSubTab\n  } = useState(\"contacts\");\n  const client = useSelector(state => state.user.client);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n\n  const addNew = (item, e) => {\n    let found = false;\n    let foundID;\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\n\n    for (var i = 0; i < recentUsers.length; i++) {\n      if (recentUsers[i].id === item.id) {\n        found = true;\n        foundID = recentUsers[i].id;\n        break;\n      }\n    }\n    /* if contact is present append messages */\n\n\n    if (found) {\n      let objIndex = recentUsers.findIndex(obj => obj.id == foundID);\n      dispatch(updateLastMessageTime({\n        id: objIndex,\n        time: dateTime()\n      }));\n    }\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\n\n\n    if (!found) {\n      recentUsers.map(ci => {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n        }\n      });\n      dispatch(addNewUSer({\n        id: item.id,\n        first_name: item.first_name,\n        lastMessageAt: dateTime(),\n        mesg: `msg at ${dateTime()}`\n      }));\n    }\n  };\n\n  const changeChatClick = e => {\n    document.querySelectorAll(\".chat-main li\").forEach(item => {\n      item.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\n  };\n\n  const addToRoster = item => {\n    let jid = item.id + \"@mongoose.mysmartpbx.org\"; //client.updateRosterItem({ jid: jid, name: item.first_name, groups: [] });\n\n    client.addRosterItem({\n      jid: jid,\n      name: item.first_name,\n      groups: []\n    });\n    console.log(\"item\", item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        type: \"search\",\n        placeholder: \"Search\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-tab\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        tabs: true,\n        id: \"myTab1\",\n        role: \"tablist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n        activeTab: chatSubTab,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-main\",\n          children: filteredUsers.length > 0 && filteredUsers.filter(data => {\n            if (searchTerm == null) {\n              return data;\n            } else if (data.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              return data;\n            }\n          }).map((chatlist, i) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `${1 === chatlist.id ? \"active\" : \"\"}`,\n              onClick: e => {\n                changeChatClick(e, chatlist);\n                dispatch(setChatWith(chatlist.first_name));\n                dispatch(setActiveTab(\"chat\"));\n                dispatch(chatededUsers(\"new\"));\n                addNew(chatlist, e);\n                addToRoster(chatlist);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `profile  ${chatlist.last_name}`,\n                  style: {\n                    backgroundImage: `url('assets/images/${chatlist.thumb}')`,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    display: \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"bg-img\",\n                    src: `assets/images/${chatlist.thumb}`,\n                    alt: \"Avatar\",\n                    style: {\n                      display: \"none\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: chatlist.first_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Team Leader\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-status\",\n                  children: chatlist.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\nexport default form;","map":{"version":3,"sources":["D:/chat/containers/leftSidebar/contactSearch.js"],"names":["React","useEffect","useSelector","useDispatch","useState","FormGroup","Input","dateTime","Nav","TabContent","fetchUsers","setChatWith","setActiveTab","chatededUsers","addNewUSer","removeRecentUser","updateLastMessageTime","form","dispatch","jid","state","user","currentUser","jidLoggedInUser","split","usersP","users","filteredUsers","length","filter","id","recentUsers","chatedUsers","searchTerm","setSearch","chatSubTab","setChatSubTab","client","addNew","item","e","found","foundID","i","objIndex","findIndex","obj","time","map","ci","hasOwnProperty","first_name","lastMessageAt","mesg","changeChatClick","document","querySelectorAll","forEach","classList","remove","currentTarget","add","querySelector","addToRoster","addRosterItem","name","groups","console","log","target","value","data","toLowerCase","includes","chatlist","last_name","backgroundImage","thumb","backgroundSize","backgroundPosition","display"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport dateTime from \"./datetime\";\r\nimport { Nav, TabContent } from \"reactstrap\";\r\n\r\nimport {\r\n  fetchUsers,\r\n  setChatWith,\r\n  setActiveTab,\r\n  chatededUsers,\r\n  addNewUSer,\r\n  removeRecentUser,\r\n  updateLastMessageTime,\r\n} from \"../../redux/actions/index\";\r\n\r\nfunction form() {\r\n  const dispatch = useDispatch();\r\n  const jid = useSelector((state) => state.user.currentUser.jid);\r\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\r\n  const usersP = useSelector((state) => state.user.users);\r\n  const filteredUsers =\r\n    usersP.length > 0 &&\r\n    usersP[0].filter((user) => user.id !== jidLoggedInUser);\r\n  const recentUsers = useSelector((state) => state.user.chatedUsers);\r\n  const [searchTerm, setSearch] = useState(null);\r\n  const [chatSubTab, setChatSubTab] = useState(\"contacts\");\r\n  const client = useSelector((state) => state.user.client);\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  const addNew = (item, e) => {\r\n    let found = false;\r\n    let foundID;\r\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\r\n    for (var i = 0; i < recentUsers.length; i++) {\r\n      if (recentUsers[i].id === item.id) {\r\n        found = true;\r\n        foundID = recentUsers[i].id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* if contact is present append messages */\r\n    if (found) {\r\n      let objIndex = recentUsers.findIndex((obj) => obj.id == foundID);\r\n      dispatch(updateLastMessageTime({ id: objIndex, time: dateTime() }));\r\n    }\r\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\r\n    if (!found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n        }\r\n      });\r\n      dispatch(\r\n        addNewUSer({\r\n          id: item.id,\r\n          first_name: item.first_name,\r\n          lastMessageAt: dateTime(),\r\n          mesg: `msg at ${dateTime()}`,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeChatClick = (e) => {\r\n    document.querySelectorAll(\".chat-main li\").forEach((item) => {\r\n      item.classList.remove(\"active\");\r\n    });\r\n    e.currentTarget.classList.add(\"active\");\r\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\r\n  };\r\n\r\n  const addToRoster = (item) => {\r\n    let jid = item.id + \"@mongoose.mysmartpbx.org\";\r\n    //client.updateRosterItem({ jid: jid, name: item.first_name, groups: [] });\r\n    client.addRosterItem({ jid: jid, name: item.first_name, groups: [] });\r\n    console.log(\"item\", item);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <FormGroup>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </FormGroup>\r\n      <div className=\"theme-tab\">\r\n        <Nav tabs id=\"myTab1\" role=\"tablist\"></Nav>\r\n        <TabContent activeTab={chatSubTab}>\r\n          <ul className=\"chat-main\">\r\n            {filteredUsers.length > 0 &&\r\n              filteredUsers\r\n                .filter((data) => {\r\n                  if (searchTerm == null) {\r\n                    return data;\r\n                  } else if (\r\n                    data.first_name\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((chatlist, i) => {\r\n                  return (\r\n                    <li\r\n                      className={`${1 === chatlist.id ? \"active\" : \"\"}`}\r\n                      key={i}\r\n                      onClick={(e) => {\r\n                        changeChatClick(e, chatlist);\r\n                        dispatch(setChatWith(chatlist.first_name));\r\n                        dispatch(setActiveTab(\"chat\"));\r\n                        dispatch(chatededUsers(\"new\"));\r\n                        addNew(chatlist, e);\r\n                        addToRoster(chatlist);\r\n                      }}\r\n                    >\r\n                      <div className=\"chat-box\">\r\n                        <div\r\n                          className={`profile  ${chatlist.last_name}`}\r\n                          style={{\r\n                            backgroundImage: `url('assets/images/${chatlist.thumb}')`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundPosition: \"center\",\r\n                            display: \"block\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"bg-img\"\r\n                            src={`assets/images/${chatlist.thumb}`}\r\n                            alt=\"Avatar\"\r\n                            style={{ display: \"none\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"details\">\r\n                          <h5>{chatlist.first_name}</h5>\r\n                          <h6>Team Leader</h6>\r\n                        </div>\r\n                        <div className=\"date-status\">{chatlist.last_name}</div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n          </ul>\r\n        </TabContent>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}