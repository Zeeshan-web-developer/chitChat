{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/types\";\nimport { combineReducers } from \"redux\";\nimport update from \"react-addons-update\";\nvar initialState = {\n  currentUser: {\n    username: null,\n    accountId: null,\n    jid: null\n  },\n  accountId: null,\n  userStatus: \"unavailable\",\n  client: null,\n  loginErrors: [],\n  loading: false,\n  activeTab: \"chat\",\n  users: [],\n  chatWith: \"A\",\n  newContact: \"contact\",\n  componentUnmount: null,\n  roster: \"\",\n  chatedUsers: [{\n    id: 1,\n    first_name: \"JACKILINE\",\n    status: \"online\",\n    mesg: \"how are you\",\n    lastSeenDate: \"30/11/19\",\n    onlineStatus: \"online\",\n    lastMessageAt: \"2021-08-07 09:03:10\"\n  }, {\n    id: 2,\n    first_name: \"BRONNNZE\",\n    status: \"online\",\n    mesg: \"how are you\",\n    lastSeenDate: \"30/11/19\",\n    onlineStatus: \"offline\",\n    lastMessageAt: \"2021-08-07 09:03:56\"\n  }]\n};\n\nvar user_reducer = function user_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: action.payload\n      });\n\n    case actionTypes.SET_USER_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userStatus: action.payload\n      });\n\n    case actionTypes.SET_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        client: action.payload\n      });\n\n    case actionTypes.LOGIN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginErrors: [action.payload]\n      });\n\n    case actionTypes.LOGIN_LODING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: action.payload\n      });\n\n    case actionTypes.SET_ACTIVE_TAB:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTab: action.payload\n      });\n\n    case actionTypes.SET_USERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [action.payload]\n      });\n\n    case actionTypes.SET_CHAT_WITH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatWith: action.payload\n      });\n\n    case actionTypes.SET_CHATED_USERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newContact: action.payload\n      });\n\n    case actionTypes.CHAT_COMPONENT_UNMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        componentUnmount: action.payload\n      });\n\n    case actionTypes.ADD_NEW_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatedUsers: [action.payload].concat(_toConsumableArray(state.chatedUsers))\n      });\n\n    case actionTypes.REMOVE_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatedUsers: state.chatedUsers.filter(function (user) {\n          return user.id !== action.payload;\n        })\n      });\n\n    case actionTypes.LAST_MESSAGE_TIME:\n      return update(state, {\n        chatedUsers: _defineProperty({}, action.payload.id, {\n          lastMessageAt: {\n            $set: action.payload.time\n          }\n        })\n      });\n\n    case actionTypes.SET_ROSTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        roster: [].concat(_toConsumableArray(state.roster), [action.payload])\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: user_reducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/chat/redux/reducers/index.js"],"names":["actionTypes","combineReducers","update","initialState","currentUser","username","accountId","jid","userStatus","client","loginErrors","loading","activeTab","users","chatWith","newContact","componentUnmount","roster","chatedUsers","id","first_name","status","mesg","lastSeenDate","onlineStatus","lastMessageAt","user_reducer","state","action","type","SET_USER","payload","SET_USER_STATUS","SET_CLIENT","LOGIN_ERROR","LOGIN_LODING","SET_ACTIVE_TAB","SET_USERS","SET_CHAT_WITH","SET_CHATED_USERS","CHAT_COMPONENT_UNMOUNT","ADD_NEW_USER","REMOVE_USER","filter","user","LAST_MESSAGE_TIME","$set","time","SET_ROSTER","rootReducer"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/types\";\r\nimport { combineReducers } from \"redux\";\r\nimport update from \"react-addons-update\";\r\nconst initialState = {\r\n  currentUser: { username: null, accountId: null, jid: null },\r\n  accountId: null,\r\n  userStatus: \"unavailable\",\r\n  client: null,\r\n  loginErrors: [],\r\n  loading: false,\r\n  activeTab: \"chat\",\r\n  users: [],\r\n  chatWith: \"A\",\r\n  newContact: \"contact\",\r\n  componentUnmount: null,\r\n  roster: \"\",\r\n  chatedUsers: [\r\n    {\r\n      id: 1,\r\n      first_name: \"JACKILINE\",\r\n      status: \"online\",\r\n      mesg: \"how are you\",\r\n      lastSeenDate: \"30/11/19\",\r\n      onlineStatus: \"online\",\r\n      lastMessageAt: \"2021-08-07 09:03:10\",\r\n    },\r\n    {\r\n      id: 2,\r\n      first_name: \"BRONNNZE\",\r\n      status: \"online\",\r\n      mesg: \"how are you\",\r\n      lastSeenDate: \"30/11/19\",\r\n      onlineStatus: \"offline\",\r\n      lastMessageAt: \"2021-08-07 09:03:56\",\r\n    },\r\n  ],\r\n};\r\nconst user_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    case actionTypes.SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        userStatus: action.payload,\r\n      };\r\n    case actionTypes.SET_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: action.payload,\r\n      };\r\n    case actionTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loginErrors: [action.payload],\r\n      };\r\n    case actionTypes.LOGIN_LODING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case actionTypes.SET_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.payload,\r\n      };\r\n    case actionTypes.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [action.payload],\r\n      };\r\n    case actionTypes.SET_CHAT_WITH:\r\n      return {\r\n        ...state,\r\n        chatWith: action.payload,\r\n      };\r\n    case actionTypes.SET_CHATED_USERS:\r\n      return {\r\n        ...state,\r\n        newContact: action.payload,\r\n      };\r\n\r\n    case actionTypes.CHAT_COMPONENT_UNMOUNT:\r\n      return {\r\n        ...state,\r\n        componentUnmount: action.payload,\r\n      };\r\n\r\n    case actionTypes.ADD_NEW_USER:\r\n      return {\r\n        ...state,\r\n\r\n        chatedUsers: [action.payload, ...state.chatedUsers],\r\n      };\r\n    case actionTypes.REMOVE_USER:\r\n      return {\r\n        ...state,\r\n\r\n        chatedUsers: state.chatedUsers.filter(\r\n          (user) => user.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case actionTypes.LAST_MESSAGE_TIME:\r\n      return update(state, {\r\n        chatedUsers: {\r\n          [action.payload.id]: {\r\n            lastMessageAt: { $set: action.payload.time },\r\n          },\r\n        },\r\n      });\r\n\r\n    case actionTypes.SET_ROSTER:\r\n      return {\r\n        ...state,\r\n        roster: [...state.roster, action.payload],\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n});\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}