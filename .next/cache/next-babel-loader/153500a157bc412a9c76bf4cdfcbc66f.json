{"ast":null,"code":"import * as XMPP from \"stanza\";\nvar client;\nexport default function (username, password) {\n  client = XMPP.createClient({\n    jid: username,\n    password: password,\n    transports: {\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\n      bosh: \"false\"\n    }\n  });\n  return client;\n}\nexport var getContacts = function getContacts() {};","map":{"version":3,"sources":["D:/chat/stanza/chatClient.js"],"names":["XMPP","client","username","password","createClient","jid","transports","websocket","bosh","getContacts"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;AACA,IAAIC,MAAJ;AACA,eAAe,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC3CF,EAAAA,MAAM,GAAGD,IAAI,CAACI,YAAL,CAAkB;AACzBC,IAAAA,GAAG,EAAEH,QADoB;AAEzBC,IAAAA,QAAQ,EAARA,QAFyB;AAGzBG,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,2CADD;AAEVC,MAAAA,IAAI,EAAE;AAFI;AAHa,GAAlB,CAAT;AAQA,SAAOP,MAAP;AACD;AAED,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM,CAAE,CAA5B","sourcesContent":["import * as XMPP from \"stanza\";\r\nlet client;\r\nexport default function (username, password) {\r\n  client = XMPP.createClient({\r\n    jid: username,\r\n    password,\r\n    transports: {\r\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\r\n      bosh: \"false\",\r\n    },\r\n  });\r\n  return client;\r\n}\r\n\r\nexport const getContacts = () => {};\r\n"]},"metadata":{},"sourceType":"module"}