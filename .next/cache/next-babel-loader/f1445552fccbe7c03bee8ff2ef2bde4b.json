{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as actionTypes from \"./types\";\nimport axios from \"../../api/index\";\nvar cookies = new Cookies();\nvar cokie = cookies.get(\"credentials\");\nexport var setUser = function setUser(user) {\n  return {\n    type: actionTypes.SET_USER,\n    payload: user\n  };\n};\nexport var setUSerStatus = function setUSerStatus(userStatus) {\n  return {\n    type: actionTypes.SET_USER_STATUS,\n    payload: userStatus\n  };\n};\nexport var setClient = function setClient(client) {\n  return {\n    type: actionTypes.SET_CLIENT,\n    payload: client\n  };\n};\nexport var setLoginError = function setLoginError(error) {\n  return {\n    type: actionTypes.LOGIN_ERROR,\n    payload: error\n  };\n};\nexport var loginLoding = function loginLoding(status) {\n  return {\n    type: actionTypes.LOGIN_LODING,\n    payload: status\n  };\n};\nexport var logout = function logout(status) {\n  return {\n    type: actionTypes.ON_LOGOUT,\n    payload: status\n  };\n};\nexport var toogleChatBoard = function toogleChatBoard(tab) {\n  return {\n    type: actionTypes.TOGGLE_CHAT_BOARD,\n    payload: tab\n  };\n};\nexport var fetchUsers = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"accounts/\".concat(id, \"/users\"), {\n              headers: {\n                \"x-auth-token\": cokie.AuthToken\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              type: actionTypes.SET_USERS,\n              payload: response\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchUsers() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var setUsers = function setUsers(users) {\n  return {\n    type: actionTypes.SET_USERS,\n    payload: users\n  };\n};","map":{"version":3,"sources":["D:/chat/redux/actions/index.js"],"names":["actionTypes","axios","cookies","Cookies","cokie","get","setUser","user","type","SET_USER","payload","setUSerStatus","userStatus","SET_USER_STATUS","setClient","client","SET_CLIENT","setLoginError","error","LOGIN_ERROR","loginLoding","status","LOGIN_LODING","logout","ON_LOGOUT","toogleChatBoard","tab","TOGGLE_CHAT_BOARD","fetchUsers","id","headers","AuthToken","response","SET_USERS","setUsers","users"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,IAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACA,IAAMC,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,aAAZ,CAAd;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AAChCC,IAAAA,IAAI,EAAER,WAAW,CAACS,QADc;AAEhCC,IAAAA,OAAO,EAAEH;AAFuB,GAAX;AAAA,CAAhB;AAKP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD;AAAA,SAAiB;AAC5CJ,IAAAA,IAAI,EAAER,WAAW,CAACa,eAD0B;AAE5CH,IAAAA,OAAO,EAAEE;AAFmC,GAAjB;AAAA,CAAtB;AAKP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAa;AACpCP,IAAAA,IAAI,EAAER,WAAW,CAACgB,UADkB;AAEpCN,IAAAA,OAAO,EAAEK;AAF2B,GAAb;AAAA,CAAlB;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAY;AACvCV,IAAAA,IAAI,EAAER,WAAW,CAACmB,WADqB;AAEvCT,IAAAA,OAAO,EAAEQ;AAF8B,GAAZ;AAAA,CAAtB;AAIP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD;AAAA,SAAa;AACtCb,IAAAA,IAAI,EAAER,WAAW,CAACsB,YADoB;AAEtCZ,IAAAA,OAAO,EAAEW;AAF6B,GAAb;AAAA,CAApB;AAIP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACF,MAAD;AAAA,SAAa;AACjCb,IAAAA,IAAI,EAAER,WAAW,CAACwB,SADe;AAEjCd,IAAAA,OAAO,EAAEW;AAFwB,GAAb;AAAA,CAAf;AAIP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,SAAU;AACvClB,IAAAA,IAAI,EAAER,WAAW,CAAC2B,iBADqB;AAEvCjB,IAAAA,OAAO,EAAEgB;AAF8B,GAAV;AAAA,CAAxB;AAKP,OAAO,IAAME,UAAU;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD3B,KAAK,CAACI,GAAN,oBAAsBwB,EAAtB,aAAkC;AACvDC,cAAAA,OAAO,EAAE;AACP,gCAAgB1B,KAAK,CAAC2B;AADf;AAD8C,aAAlC,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA,6CAMjB;AACLxB,cAAAA,IAAI,EAAER,WAAW,CAACiC,SADb;AAELvB,cAAAA,OAAO,EAAEsB;AAFJ,aANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVJ,UAAU;AAAA;AAAA;AAAA,GAAhB;AAYP,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAY;AAClC3B,IAAAA,IAAI,EAAER,WAAW,CAACiC,SADgB;AAElCvB,IAAAA,OAAO,EAAEyB;AAFyB,GAAZ;AAAA,CAAjB","sourcesContent":["import * as actionTypes from \"./types\";\r\nimport axios from \"../../api/index\";\r\nconst cookies = new Cookies();\r\nconst cokie = cookies.get(\"credentials\");\r\n\r\nexport const setUser = (user) => ({\r\n  type: actionTypes.SET_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const setUSerStatus = (userStatus) => ({\r\n  type: actionTypes.SET_USER_STATUS,\r\n  payload: userStatus,\r\n});\r\n\r\nexport const setClient = (client) => ({\r\n  type: actionTypes.SET_CLIENT,\r\n  payload: client,\r\n});\r\n\r\nexport const setLoginError = (error) => ({\r\n  type: actionTypes.LOGIN_ERROR,\r\n  payload: error,\r\n});\r\nexport const loginLoding = (status) => ({\r\n  type: actionTypes.LOGIN_LODING,\r\n  payload: status,\r\n});\r\nexport const logout = (status) => ({\r\n  type: actionTypes.ON_LOGOUT,\r\n  payload: status,\r\n});\r\nexport const toogleChatBoard = (tab) => ({\r\n  type: actionTypes.TOGGLE_CHAT_BOARD,\r\n  payload: tab,\r\n});\r\n\r\nexport const fetchUsers = async () => {\r\n  const response = await axios.get(`accounts/${id}/users`, {\r\n    headers: {\r\n      \"x-auth-token\": cokie.AuthToken,\r\n    },\r\n  });\r\n  return {\r\n    type: actionTypes.SET_USERS,\r\n    payload: response,\r\n  };\r\n};\r\n\r\nexport const setUsers = (users) => ({\r\n  type: actionTypes.SET_USERS,\r\n  payload: users,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}