{"ast":null,"code":"import * as XMPP from \"stanza\";\nlet client;\nexport default function chatClient(username, password) {\n  client = XMPP.createClient({\n    jid: username,\n    password,\n    transports: {\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\n      bosh: \"false\"\n    },\n    rosterVer: \"ver14\"\n  }); // client.on(\"*\", console.log);\n\n  client.on(\"session:started\", () => {\n    // client.subscribe(\"sumanth@mongoose.mysmartpbx.org\");\n    console.log(\"session started\"); // getContacts();\n\n    client.sendPresence();\n  });\n  client.on(\"auth:failed\", () => {\n    console.log(\"xmpp authentication failed\");\n  });\n  return client;\n}\nexport const getContacts = async () => {\n  const contacts = await client.getRoster();\n  console.log(\"all contacts \", contacts.items);\n};","map":{"version":3,"sources":["D:/chat/stanza/chatClient.js"],"names":["XMPP","client","chatClient","username","password","createClient","jid","transports","websocket","bosh","rosterVer","on","console","log","sendPresence","getContacts","contacts","getRoster","items"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;AACA,IAAIC,MAAJ;AAEA,eAAe,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwC;AACrDH,EAAAA,MAAM,GAAGD,IAAI,CAACK,YAAL,CAAkB;AACzBC,IAAAA,GAAG,EAAEH,QADoB;AAEzBC,IAAAA,QAFyB;AAGzBG,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,2CADD;AAEVC,MAAAA,IAAI,EAAE;AAFI,KAHa;AAOzBC,IAAAA,SAAS,EAAE;AAPc,GAAlB,CAAT,CADqD,CAUrD;;AACAT,EAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA6B,MAAM;AACjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFiC,CAGjC;;AACAZ,IAAAA,MAAM,CAACa,YAAP;AACD,GALD;AAOAb,EAAAA,MAAM,CAACU,EAAP,CAAU,aAAV,EAAyB,MAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAFD;AAGA,SAAOZ,MAAP;AACD;AAED,OAAO,MAAMc,WAAW,GAAG,YAAY;AACrC,QAAMC,QAAQ,GAAG,MAAMf,MAAM,CAACgB,SAAP,EAAvB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAAQ,CAACE,KAAtC;AACD,CAHM","sourcesContent":["import * as XMPP from \"stanza\";\r\nlet client;\r\n\r\nexport default function chatClient(username, password) {\r\n  client = XMPP.createClient({\r\n    jid: username,\r\n    password,\r\n    transports: {\r\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\r\n      bosh: \"false\",\r\n    },\r\n    rosterVer: \"ver14\",\r\n  });\r\n  // client.on(\"*\", console.log);\r\n  client.on(\"session:started\", () => {\r\n    // client.subscribe(\"sumanth@mongoose.mysmartpbx.org\");\r\n    console.log(\"session started\");\r\n    // getContacts();\r\n    client.sendPresence();\r\n  });\r\n\r\n  client.on(\"auth:failed\", () => {\r\n    console.log(\"xmpp authentication failed\");\r\n  });\r\n  return client;\r\n}\r\n\r\nexport const getContacts = async () => {\r\n  const contacts = await client.getRoster();\r\n  console.log(\"all contacts \", contacts.items);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}