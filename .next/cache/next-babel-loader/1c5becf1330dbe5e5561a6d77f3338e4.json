{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxReset from \"redux-reset\";\nimport logger from \"redux-logger\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport createWebStorage from \"redux-persist/lib/storage/createWebStorage\";\nexport default (initialState => {\n  let store;\n  const isClient = false;\n\n  if (isClient) {\n    const {\n      persistReducer\n    } = require(\"redux-persist\");\n\n    const storage = require(\"redux-persist/lib/storage\").default;\n\n    const persistConfig = {\n      key: \"root\",\n      storage\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(reduxReset(), applyMiddleware(thunk)));\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n  }\n\n  return store;\n});","map":{"version":3,"sources":["D:/chat/redux/store/store.js"],"names":["createStore","applyMiddleware","rootReducer","thunk","composeWithDevTools","reduxReset","logger","persistStore","persistReducer","createTransform","createWebStorage","initialState","store","isClient","require","storage","default","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,QAA8D,eAA9D;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AAEA,gBAAgBC,YAAD,IAAkB;AAC/B,MAAIC,KAAJ;AAEA,QAAMC,QAAQ,QAAd;;AAEA,MAAIA,QAAJ,EAAc;AACZ,UAAM;AAAEL,MAAAA;AAAF,QAAqBM,OAAO,CAAC,eAAD,CAAlC;;AACA,UAAMC,OAAO,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,OAArD;;AAEA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,MADe;AAEpBH,MAAAA;AAFoB,KAAtB;AAKAH,IAAAA,KAAK,GAAGZ,WAAW,CACjBQ,cAAc,CAACS,aAAD,EAAgBf,WAAhB,CADG,EAEjBS,YAFiB,EAGjBP,mBAAmB,CAACC,UAAU,EAAX,EAAeJ,eAAe,CAACE,KAAD,CAA9B,CAHF,CAAnB;AAMAS,IAAAA,KAAK,CAACO,WAAN,GAAoBZ,YAAY,CAACK,KAAD,CAAhC;AACD,GAhBD,MAgBO;AACLA,IAAAA,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcS,YAAd,EAA4BV,eAAe,CAACE,KAAD,CAA3C,CAAnB;AACD;;AAED,SAAOS,KAAP;AACD,CA1BD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reduxReset from \"redux-reset\";\r\nimport logger from \"redux-logger\";\r\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\r\nimport createWebStorage from \"redux-persist/lib/storage/createWebStorage\";\r\n\r\nexport default (initialState) => {\r\n  let store;\r\n\r\n  const isClient = typeof window !== \"undefined\";\r\n\r\n  if (isClient) {\r\n    const { persistReducer } = require(\"redux-persist\");\r\n    const storage = require(\"redux-persist/lib/storage\").default;\r\n\r\n    const persistConfig = {\r\n      key: \"root\",\r\n      storage,\r\n    };\r\n\r\n    store = createStore(\r\n      persistReducer(persistConfig, rootReducer),\r\n      initialState,\r\n      composeWithDevTools(reduxReset(), applyMiddleware(thunk))\r\n    );\r\n\r\n    store.__PERSISTOR = persistStore(store);\r\n  } else {\r\n    store = createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n  }\r\n\r\n  return store;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}