{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/types\";\nimport { combineReducers } from \"redux\";\nvar initialState = {\n  user: {\n    currentUser: null,\n    accountId: null\n  },\n  userStatus: \"unavailable\",\n  client: null,\n  loginErrors: [],\n  loading: false,\n  chatboard: \"call\"\n};\n\nvar user_reducer = function user_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: action.payload\n      });\n\n    case actionTypes.SET_USER_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userStatus: action.payload\n      });\n\n    case actionTypes.SET_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        client: action.payload\n      });\n\n    case actionTypes.LOGIN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginErrors: [action.payload]\n      });\n\n    case actionTypes.LOGIN_LODING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: action.payload\n      });\n\n    case actionTypes.TOGGLE_CHAT_BOARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatboard: action.payload\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: user_reducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/chat/redux/reducers/index.js"],"names":["actionTypes","combineReducers","initialState","user","currentUser","accountId","userStatus","client","loginErrors","loading","chatboard","user_reducer","state","action","type","SET_USER","payload","SET_USER_STATUS","SET_CLIENT","LOGIN_ERROR","LOGIN_LODING","TOGGLE_CHAT_BOARD","rootReducer"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,IADT;AAEJC,IAAAA,SAAS,EAAE;AAFP,GADa;AAKnBC,EAAAA,UAAU,EAAE,aALO;AAMnBC,EAAAA,MAAM,EAAE,IANW;AAOnBC,EAAAA,WAAW,EAAE,EAPM;AAQnBC,EAAAA,OAAO,EAAE,KARU;AASnBC,EAAAA,SAAS,EAAE;AATQ,CAArB;;AAWA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAW,CAACe,QAAjB;AACE,6CACKH,KADL;AAEER,QAAAA,WAAW,EAAES,MAAM,CAACG;AAFtB;;AAIF,SAAKhB,WAAW,CAACiB,eAAjB;AACE,6CACKL,KADL;AAEEN,QAAAA,UAAU,EAAEO,MAAM,CAACG;AAFrB;;AAIF,SAAKhB,WAAW,CAACkB,UAAjB;AACE,6CACKN,KADL;AAEEL,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAFjB;;AAIF,SAAKhB,WAAW,CAACmB,WAAjB;AACE,6CACKP,KADL;AAEEJ,QAAAA,WAAW,EAAE,CAACK,MAAM,CAACG,OAAR;AAFf;;AAIF,SAAKhB,WAAW,CAACoB,YAAjB;AACE,6CACKR,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACG;AAFlB;;AAIF,SAAKhB,WAAW,CAACqB,iBAAjB;AACE,6CACKT,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACG;AAFpB;;AAIF;AAAS;AACP,eAAOJ,KAAP;AACD;AAjCH;AAmCD,CApCD;;AAsCA,IAAMU,WAAW,GAAGrB,eAAe,CAAC;AAClCE,EAAAA,IAAI,EAAEQ;AAD4B,CAAD,CAAnC;AAGA,eAAeW,WAAf","sourcesContent":["import * as actionTypes from \"../actions/types\";\r\nimport { combineReducers } from \"redux\";\r\nconst initialState = {\r\n  user: {\r\n    currentUser: null,\r\n    accountId: null,\r\n  },\r\n  userStatus: \"unavailable\",\r\n  client: null,\r\n  loginErrors: [],\r\n  loading: false,\r\n  chatboard: \"call\",\r\n};\r\nconst user_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    case actionTypes.SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        userStatus: action.payload,\r\n      };\r\n    case actionTypes.SET_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: action.payload,\r\n      };\r\n    case actionTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loginErrors: [action.payload],\r\n      };\r\n    case actionTypes.LOGIN_LODING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case actionTypes.TOGGLE_CHAT_BOARD:\r\n      return {\r\n        ...state,\r\n        chatboard: action.payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n});\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}