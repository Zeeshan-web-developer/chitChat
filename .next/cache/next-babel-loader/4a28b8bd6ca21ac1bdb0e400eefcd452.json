{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\nvar _jsxFileName = \"D:\\\\chat\\\\containers\\\\leftSidebar\\\\contactSearch.js\",\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport dateTime from \"./datetime\";\nimport Logo from \"./1.jpg\";\nimport _ from \"lodash\";\nimport { Nav, TabContent } from \"reactstrap\";\nimport { fetchUsers, setChatWith, setActiveTab, chatededUsers, addNewUSer, removeRecentUser, updateLastMessageTime, setRoster } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar objUser = function objUser(id, username, userStatus) {\n  _classCallCheck(this, objUser);\n\n  this.id = id;\n  this.username = username;\n  this.userStatus = userStatus;\n};\n\nfunction form() {\n  _s();\n\n  var _jsxDEV2,\n      _this = this;\n\n  var dispatch = useDispatch();\n  var jid = useSelector(function (state) {\n    return state.user.currentUser.jid;\n  });\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\n  var usersP = useSelector(function (state) {\n    return state.user.users;\n  });\n  var filteredUsers = usersP.length > 0 && usersP[0].filter(function (user) {\n    return user.id !== jidLoggedInUser;\n  });\n  var recentUsers = useSelector(function (state) {\n    return state.user.chatedUsers;\n  });\n\n  var _useState = useState(null),\n      searchTerm = _useState[0],\n      setSearch = _useState[1];\n\n  var _useState2 = useState(\"contacts\"),\n      chatSubTab = _useState2[0],\n      setChatSubTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      onlineusers = _useState3[0],\n      setOnlineusers = _useState3[1];\n\n  var client = useSelector(function (state) {\n    return state.user.client;\n  });\n  var alluserStatus = useSelector(function (state) {\n    return state.user.alluserStatus;\n  });\n  useEffect(function () {\n    dispatch(fetchUsers());\n  }, []); // var mergedList = _.map(filteredUsers, function (item) {\n  //   return _.extend(item, _.findWhere(alluserStatus, { id: item.id }));\n  // });\n\n  useEffect(function () {\n    var newArray = [];\n\n    if (filteredUsers && alluserStatus) {\n      var _iterator = _createForOfIteratorHelper(filteredUsers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var obj1 = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(alluserStatus),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var obj2 = _step2.value;\n\n              if (obj2.id === obj1.id) {\n                console.log(\"compare\", obj1.id, obj1.first_name, obj2.onlineStatus);\n                var obj = new objUser(obj1.id, obj1.first_name, obj2.onlineStatus);\n                newArray.push(obj);\n              } else {\n                var _obj = new objUser(obj1.id, obj1.first_name, \"offline\");\n\n                newArray.push(_obj);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setOnlineusers(newArray);\n      console.log(\"Online users\", onlineusers);\n    }\n  }, [alluserStatus]);\n\n  var addNew = function addNew(item, e) {\n    var found = false;\n    var foundID;\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\n\n    for (var i = 0; i < recentUsers.length; i++) {\n      if (recentUsers[i].id === item.id) {\n        found = true;\n        foundID = recentUsers[i].id;\n        break;\n      }\n    }\n    /* if contact is present append messages */\n\n\n    if (found) {\n      var objIndex = recentUsers.findIndex(function (obj) {\n        return obj.id == foundID;\n      });\n      dispatch(updateLastMessageTime({\n        id: objIndex,\n        time: dateTime()\n      }));\n    }\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\n\n\n    if (!found) {\n      recentUsers.map(function (ci) {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n        }\n      });\n      dispatch(addNewUSer({\n        id: item.id,\n        first_name: item.first_name,\n        status: \"online\",\n        mesg: \"msg at \".concat(dateTime()),\n        onlineStatus: \"online\",\n        lastMessageAt: dateTime()\n      }));\n    }\n  };\n\n  var changeChatClick = function changeChatClick(e) {\n    document.querySelectorAll(\".chat-main li\").forEach(function (item) {\n      item.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\n  };\n\n  var addToRoster = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      var jidd, contacts1, length, found, obj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              jidd = item.id + \"@mongoose.mysmartpbx.org\";\n              console.log(\"jid\", jidd);\n              _context.next = 4;\n              return client.getRoster();\n\n            case 4:\n              contacts1 = _context.sent;\n              console.log(\"contacts1\", contacts1);\n              length = contacts1.items.length;\n              found = false;\n              length > 0 && contacts1.items.map(function (user) {\n                if (user.jid === jidd) {\n                  console.log(\"user is in my  roster\");\n                  found = true;\n                }\n              });\n\n              if (!found) {\n                console.log(\"not found\", client);\n                obj = {\n                  jid: jidd,\n                  name: item.first_name,\n                  groups: []\n                };\n                client.updateRosterItem(obj); // dispatch(setRoster(obj));\n\n                setTimeout(function () {\n                  client.subscribe(jidd, function () {\n                    return console.log(\"subscrption request sent\");\n                  });\n                  acceptRequest();\n                }, 1000);\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addToRoster(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var acceptRequest = function acceptRequest() {\n    console.log(\"listening\");\n    client.on(\"subscribe\", function (ReceivedPresence) {\n      return client.acceptSubscription(ReceivedPresence.from);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, (_jsxDEV2 = {\n        type: \"email\",\n        name: \"email\"\n      }, _defineProperty(_jsxDEV2, \"type\", \"search\"), _defineProperty(_jsxDEV2, \"placeholder\", \"Search\"), _defineProperty(_jsxDEV2, \"onChange\", function onChange(e) {\n        return setSearch(e.target.value);\n      }), _jsxDEV2), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-tab\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        tabs: true,\n        id: \"myTab1\",\n        role: \"tablist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n        activeTab: chatSubTab,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-main\",\n          children: filteredUsers.length > 0 && filteredUsers.filter(function (data) {\n            if (searchTerm == null) {\n              return data;\n            } else if (data.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              return data;\n            }\n          }).map(function (chatlist, i) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"\".concat(1 === chatlist.id ? \"active\" : \"\"),\n              onClick: function onClick(e) {\n                changeChatClick(e, chatlist);\n                dispatch(setChatWith(chatlist.first_name));\n                dispatch(setActiveTab(\"chat\"));\n                dispatch(chatededUsers(\"new\"));\n                addNew(chatlist, e);\n                addToRoster(chatlist);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profile online\",\n                  style: {\n                    backgroundImage: \"url(\".concat(Logo, \")\"),\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    display: \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"bg-img\",\n                    src: Logo,\n                    alt: \"Avatar\",\n                    style: {\n                      display: \"none\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: chatlist.first_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-status\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"ti-pin2\",\n                    onClick: function onClick(e) {\n                      return Tipin(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(form, \"vWvL4qwqrPx1ke5Ho+u494Npgp4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\nexport default form;","map":{"version":3,"sources":["D:/chat/containers/leftSidebar/contactSearch.js"],"names":["React","useEffect","useSelector","useDispatch","useState","FormGroup","Input","dateTime","Logo","_","Nav","TabContent","fetchUsers","setChatWith","setActiveTab","chatededUsers","addNewUSer","removeRecentUser","updateLastMessageTime","setRoster","objUser","id","username","userStatus","form","dispatch","jid","state","user","currentUser","jidLoggedInUser","split","usersP","users","filteredUsers","length","filter","recentUsers","chatedUsers","searchTerm","setSearch","chatSubTab","setChatSubTab","onlineusers","setOnlineusers","client","alluserStatus","newArray","obj1","obj2","console","log","first_name","onlineStatus","obj","push","addNew","item","e","found","foundID","i","objIndex","findIndex","time","map","ci","hasOwnProperty","status","mesg","lastMessageAt","changeChatClick","document","querySelectorAll","forEach","classList","remove","currentTarget","add","querySelector","addToRoster","jidd","getRoster","contacts1","items","name","groups","updateRosterItem","setTimeout","subscribe","acceptRequest","on","ReceivedPresence","acceptSubscription","from","target","value","data","toLowerCase","includes","chatlist","backgroundImage","backgroundSize","backgroundPosition","display","Tipin"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport dateTime from \"./datetime\";\r\nimport Logo from \"./1.jpg\";\r\nimport _ from \"lodash\";\r\nimport { Nav, TabContent } from \"reactstrap\";\r\nimport {\r\n  fetchUsers,\r\n  setChatWith,\r\n  setActiveTab,\r\n  chatededUsers,\r\n  addNewUSer,\r\n  removeRecentUser,\r\n  updateLastMessageTime,\r\n  setRoster,\r\n} from \"../../redux/actions/index\";\r\n\r\nclass objUser {\r\n  constructor(id, username, userStatus) {\r\n    this.id = id;\r\n    this.username = username;\r\n    this.userStatus = userStatus;\r\n  }\r\n}\r\n\r\nfunction form() {\r\n  const dispatch = useDispatch();\r\n  const jid = useSelector((state) => state.user.currentUser.jid);\r\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\r\n  const usersP = useSelector((state) => state.user.users);\r\n  const filteredUsers =\r\n    usersP.length > 0 &&\r\n    usersP[0].filter((user) => user.id !== jidLoggedInUser);\r\n  const recentUsers = useSelector((state) => state.user.chatedUsers);\r\n  const [searchTerm, setSearch] = useState(null);\r\n  const [chatSubTab, setChatSubTab] = useState(\"contacts\");\r\n  const [onlineusers, setOnlineusers] = useState([]);\r\n  const client = useSelector((state) => state.user.client);\r\n  let alluserStatus = useSelector((state) => state.user.alluserStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  // var mergedList = _.map(filteredUsers, function (item) {\r\n  //   return _.extend(item, _.findWhere(alluserStatus, { id: item.id }));\r\n  // });\r\n\r\n  useEffect(() => {\r\n    let newArray = [];\r\n    if (filteredUsers && alluserStatus) {\r\n      for (let obj1 of filteredUsers) {\r\n        for (let obj2 of alluserStatus) {\r\n          if (obj2.id === obj1.id) {\r\n            console.log(\"compare\", obj1.id, obj1.first_name, obj2.onlineStatus);\r\n            let obj = new objUser(obj1.id, obj1.first_name, obj2.onlineStatus);\r\n            newArray.push(obj);\r\n          } else {\r\n            let obj = new objUser(obj1.id, obj1.first_name, \"offline\");\r\n            newArray.push(obj);\r\n          }\r\n        }\r\n      }\r\n      setOnlineusers(newArray);\r\n      console.log(\"Online users\", onlineusers);\r\n    }\r\n  }, [alluserStatus]);\r\n\r\n  const addNew = (item, e) => {\r\n    let found = false;\r\n    let foundID;\r\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\r\n    for (var i = 0; i < recentUsers.length; i++) {\r\n      if (recentUsers[i].id === item.id) {\r\n        found = true;\r\n        foundID = recentUsers[i].id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* if contact is present append messages */\r\n    if (found) {\r\n      let objIndex = recentUsers.findIndex((obj) => obj.id == foundID);\r\n      dispatch(updateLastMessageTime({ id: objIndex, time: dateTime() }));\r\n    }\r\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\r\n    if (!found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n        }\r\n      });\r\n      dispatch(\r\n        addNewUSer({\r\n          id: item.id,\r\n          first_name: item.first_name,\r\n          status: \"online\",\r\n          mesg: `msg at ${dateTime()}`,\r\n          onlineStatus: \"online\",\r\n          lastMessageAt: dateTime(),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeChatClick = (e) => {\r\n    document.querySelectorAll(\".chat-main li\").forEach((item) => {\r\n      item.classList.remove(\"active\");\r\n    });\r\n    e.currentTarget.classList.add(\"active\");\r\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\r\n  };\r\n\r\n  const addToRoster = async (item) => {\r\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\r\n    console.log(\"jid\", jidd);\r\n    let contacts1 = await client.getRoster();\r\n    console.log(\"contacts1\", contacts1);\r\n    let length = contacts1.items.length;\r\n    let found = false;\r\n    length > 0 &&\r\n      contacts1.items.map((user) => {\r\n        if (user.jid === jidd) {\r\n          console.log(\"user is in my  roster\");\r\n          found = true;\r\n        }\r\n      });\r\n\r\n    if (!found) {\r\n      console.log(\"not found\", client);\r\n      let obj = {\r\n        jid: jidd,\r\n        name: item.first_name,\r\n        groups: [],\r\n      };\r\n      client.updateRosterItem(obj);\r\n      // dispatch(setRoster(obj));\r\n      setTimeout(() => {\r\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\r\n        acceptRequest();\r\n      }, 1000);\r\n    }\r\n  };\r\n  const acceptRequest = () => {\r\n    console.log(\"listening\");\r\n    client.on(\"subscribe\", (ReceivedPresence) =>\r\n      client.acceptSubscription(ReceivedPresence.from)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <FormGroup>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </FormGroup>\r\n      <div className=\"theme-tab\">\r\n        <Nav tabs id=\"myTab1\" role=\"tablist\"></Nav>\r\n        <TabContent activeTab={chatSubTab}>\r\n          <ul className=\"chat-main\">\r\n            {filteredUsers.length > 0 &&\r\n              filteredUsers\r\n                .filter((data) => {\r\n                  if (searchTerm == null) {\r\n                    return data;\r\n                  } else if (\r\n                    data.first_name\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((chatlist, i) => {\r\n                  return (\r\n                    <li\r\n                      className={`${1 === chatlist.id ? \"active\" : \"\"}`}\r\n                      key={i}\r\n                      onClick={(e) => {\r\n                        changeChatClick(e, chatlist);\r\n                        dispatch(setChatWith(chatlist.first_name));\r\n                        dispatch(setActiveTab(\"chat\"));\r\n                        dispatch(chatededUsers(\"new\"));\r\n                        addNew(chatlist, e);\r\n                        addToRoster(chatlist);\r\n                      }}\r\n                    >\r\n                      <div className=\"chat-box\">\r\n                        <div\r\n                          className={`profile online`}\r\n                          style={{\r\n                            backgroundImage: `url(${Logo})`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundPosition: \"center\",\r\n                            display: \"block\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"bg-img\"\r\n                            src={Logo}\r\n                            alt=\"Avatar\"\r\n                            style={{ display: \"none\" }}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"details\">\r\n                          <h5>{chatlist.first_name}</h5>\r\n                          {/* <h6>{chatlist.mesg}</h6> */}\r\n                        </div>\r\n                        <div className=\"date-status\">\r\n                          <i className=\"ti-pin2\" onClick={(e) => Tipin(e)}></i>\r\n                          {/* <h6>{chatlist.lastSeenDate}</h6> */}\r\n                          {/* {chatlist.status === \"Sending\" || \"Failed\" || \"Seen\" ? (\r\n                      <h6\r\n                        className={`${\r\n                          chatlist.status === \"Sending\"\r\n                            ? \"font-dark\"\r\n                            : chatlist.status === \"Failed\"\r\n                            ? \"font-danger\"\r\n                            : \"font-success\"\r\n                        }  status`}\r\n                      >\r\n                        {chatlist.status === \"8\" ? \"\" : chatlist.status}\r\n                      </h6>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                          {/* {chatlist.status === \"8\" ? (\r\n                      <div className=\"badge badge-primary sm\">\r\n                        {chatlist.status}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n          </ul>\r\n        </TabContent>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}