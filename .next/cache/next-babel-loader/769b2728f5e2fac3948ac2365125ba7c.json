{"ast":null,"code":"import * as XMPP from \"stanza\";\nvar client;\nexport default function (username, password) {\n  client = XMPP.createClient({\n    jid: username,\n    password: password,\n    transports: {\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\n      bosh: \"false\"\n    }\n  });\n  client.on(\"session:started\", function () {\n    client.getRoster();\n    client.sendPresence();\n  });\n  client.on(\"auth:failed\", console.log(\"Failed\"));\n  client.on(\"auth:success\", console.log(\"auth success\")); // client.on(\"*\", console.log);\n\n  client.on(\"message\", function (msg) {\n    return console.log(\"Message is as: \" + JSON.stringify(msg));\n  });\n  this.client = client;\n  return client;\n}\n\nvar connect = function connect() {\n  client.connect();\n};","map":{"version":3,"sources":["D:/chat/stanza/chatClient.js"],"names":["XMPP","client","username","password","createClient","jid","transports","websocket","bosh","on","getRoster","sendPresence","console","log","msg","JSON","stringify","connect"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;AACA,IAAIC,MAAJ;AACA,eAAe,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC3CF,EAAAA,MAAM,GAAGD,IAAI,CAACI,YAAL,CAAkB;AACzBC,IAAAA,GAAG,EAAEH,QADoB;AAEzBC,IAAAA,QAAQ,EAARA,QAFyB;AAGzBG,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,2CADD;AAEVC,MAAAA,IAAI,EAAE;AAFI;AAHa,GAAlB,CAAT;AAQAP,EAAAA,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA6B,YAAM;AACjCR,IAAAA,MAAM,CAACS,SAAP;AACAT,IAAAA,MAAM,CAACU,YAAP;AACD,GAHD;AAIAV,EAAAA,MAAM,CAACQ,EAAP,CAAU,aAAV,EAAyBG,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAzB;AACAZ,EAAAA,MAAM,CAACQ,EAAP,CAAU,cAAV,EAA0BG,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA1B,EAd2C,CAe3C;;AACAZ,EAAAA,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAqB,UAACK,GAAD;AAAA,WACnBF,OAAO,CAACC,GAAR,CAAY,oBAAoBE,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAhC,CADmB;AAAA,GAArB;AAGA,OAAKb,MAAL,GAAcA,MAAd;AACA,SAAOA,MAAP;AACD;;AAED,IAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBhB,EAAAA,MAAM,CAACgB,OAAP;AACD,CAFD","sourcesContent":["import * as XMPP from \"stanza\";\r\nlet client;\r\nexport default function (username, password) {\r\n  client = XMPP.createClient({\r\n    jid: username,\r\n    password,\r\n    transports: {\r\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\r\n      bosh: \"false\",\r\n    },\r\n  });\r\n  client.on(\"session:started\", () => {\r\n    client.getRoster();\r\n    client.sendPresence();\r\n  });\r\n  client.on(\"auth:failed\", console.log(\"Failed\"));\r\n  client.on(\"auth:success\", console.log(\"auth success\"));\r\n  // client.on(\"*\", console.log);\r\n  client.on(\"message\", (msg) =>\r\n    console.log(\"Message is as: \" + JSON.stringify(msg))\r\n  );\r\n  this.client = client;\r\n  return client;\r\n}\r\n\r\nconst connect = () => {\r\n  client.connect();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}