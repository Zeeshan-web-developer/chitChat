{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport axios from \"../../api/index\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst cokie = cookies.get(\"credentials\");\nexport const setUser = user => ({\n  type: actionTypes.SET_USER,\n  payload: user\n});\nexport const setUSerStatus = userStatus => ({\n  type: actionTypes.SET_USER_STATUS,\n  payload: userStatus\n});\nexport const setClient = client => ({\n  type: actionTypes.SET_CLIENT,\n  payload: client\n});\nexport const setLoginError = error => ({\n  type: actionTypes.LOGIN_ERROR,\n  payload: error\n});\nexport const loginLoding = status => ({\n  type: actionTypes.LOGIN_LODING,\n  payload: status\n});\nexport const logout = status => ({\n  type: actionTypes.ON_LOGOUT,\n  payload: status\n});\nexport const toogleChatBoard = tab => ({\n  type: actionTypes.TOGGLE_CHAT_BOARD,\n  payload: tab\n});\nconst id = \"fbdcd3c94af9ffaa12f0ff4308d3b9bd\";\nexport const fetchUsers = () => {\n  return async dispatch => {\n    const response = await axios.get(`accounts/${id}/users`, {\n      headers: {\n        \"x-auth-token\": cokie.AuthToken\n      }\n    });\n    dispatch({\n      type: action.SET_USERS,\n      payload: response\n    });\n  };\n};\nexport const setUsers = users => ({\n  type: actionTypes.SET_USERS,\n  payload: users\n});","map":{"version":3,"sources":["D:/chat/redux/actions/index.js"],"names":["actionTypes","axios","Cookies","cookies","cokie","get","setUser","user","type","SET_USER","payload","setUSerStatus","userStatus","SET_USER_STATUS","setClient","client","SET_CLIENT","setLoginError","error","LOGIN_ERROR","loginLoding","status","LOGIN_LODING","logout","ON_LOGOUT","toogleChatBoard","tab","TOGGLE_CHAT_BOARD","id","fetchUsers","dispatch","response","headers","AuthToken","action","SET_USERS","setUsers","users"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,aAAZ,CAAd;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAER,WAAW,CAACS,QADc;AAEhCC,EAAAA,OAAO,EAAEH;AAFuB,CAAX,CAAhB;AAKP,OAAO,MAAMI,aAAa,GAAIC,UAAD,KAAiB;AAC5CJ,EAAAA,IAAI,EAAER,WAAW,CAACa,eAD0B;AAE5CH,EAAAA,OAAO,EAAEE;AAFmC,CAAjB,CAAtB;AAKP,OAAO,MAAME,SAAS,GAAIC,MAAD,KAAa;AACpCP,EAAAA,IAAI,EAAER,WAAW,CAACgB,UADkB;AAEpCN,EAAAA,OAAO,EAAEK;AAF2B,CAAb,CAAlB;AAKP,OAAO,MAAME,aAAa,GAAIC,KAAD,KAAY;AACvCV,EAAAA,IAAI,EAAER,WAAW,CAACmB,WADqB;AAEvCT,EAAAA,OAAO,EAAEQ;AAF8B,CAAZ,CAAtB;AAIP,OAAO,MAAME,WAAW,GAAIC,MAAD,KAAa;AACtCb,EAAAA,IAAI,EAAER,WAAW,CAACsB,YADoB;AAEtCZ,EAAAA,OAAO,EAAEW;AAF6B,CAAb,CAApB;AAIP,OAAO,MAAME,MAAM,GAAIF,MAAD,KAAa;AACjCb,EAAAA,IAAI,EAAER,WAAW,CAACwB,SADe;AAEjCd,EAAAA,OAAO,EAAEW;AAFwB,CAAb,CAAf;AAIP,OAAO,MAAMI,eAAe,GAAIC,GAAD,KAAU;AACvClB,EAAAA,IAAI,EAAER,WAAW,CAAC2B,iBADqB;AAEvCjB,EAAAA,OAAO,EAAEgB;AAF8B,CAAV,CAAxB;AAIP,MAAME,EAAE,GAAG,kCAAX;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAACI,GAAN,CAAW,YAAWuB,EAAG,QAAzB,EAAkC;AACvDI,MAAAA,OAAO,EAAE;AACP,wBAAgB5B,KAAK,CAAC6B;AADf;AAD8C,KAAlC,CAAvB;AAKAH,IAAAA,QAAQ,CAAC;AAAEtB,MAAAA,IAAI,EAAE0B,MAAM,CAACC,SAAf;AAA0BzB,MAAAA,OAAO,EAAEqB;AAAnC,KAAD,CAAR;AACD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMK,QAAQ,GAAIC,KAAD,KAAY;AAClC7B,EAAAA,IAAI,EAAER,WAAW,CAACmC,SADgB;AAElCzB,EAAAA,OAAO,EAAE2B;AAFyB,CAAZ,CAAjB","sourcesContent":["import * as actionTypes from \"./types\";\r\nimport axios from \"../../api/index\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\nconst cokie = cookies.get(\"credentials\");\r\n\r\nexport const setUser = (user) => ({\r\n  type: actionTypes.SET_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const setUSerStatus = (userStatus) => ({\r\n  type: actionTypes.SET_USER_STATUS,\r\n  payload: userStatus,\r\n});\r\n\r\nexport const setClient = (client) => ({\r\n  type: actionTypes.SET_CLIENT,\r\n  payload: client,\r\n});\r\n\r\nexport const setLoginError = (error) => ({\r\n  type: actionTypes.LOGIN_ERROR,\r\n  payload: error,\r\n});\r\nexport const loginLoding = (status) => ({\r\n  type: actionTypes.LOGIN_LODING,\r\n  payload: status,\r\n});\r\nexport const logout = (status) => ({\r\n  type: actionTypes.ON_LOGOUT,\r\n  payload: status,\r\n});\r\nexport const toogleChatBoard = (tab) => ({\r\n  type: actionTypes.TOGGLE_CHAT_BOARD,\r\n  payload: tab,\r\n});\r\nconst id = \"fbdcd3c94af9ffaa12f0ff4308d3b9bd\";\r\nexport const fetchUsers = () => {\r\n  return async (dispatch) => {\r\n    const response = await axios.get(`accounts/${id}/users`, {\r\n      headers: {\r\n        \"x-auth-token\": cokie.AuthToken,\r\n      },\r\n    });\r\n    dispatch({ type: action.SET_USERS, payload: response });\r\n  };\r\n};\r\n\r\nexport const setUsers = (users) => ({\r\n  type: actionTypes.SET_USERS,\r\n  payload: users,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}