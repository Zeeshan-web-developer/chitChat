{"ast":null,"code":"import * as XMPP from \"stanza\";\nlet client;\n\nasync function addContact() {\n  var stnza = {\n    xmlns: \"jabber:iq:roster\",\n    type: \"set\",\n    from: username,\n    id: \"roster4\",\n    name: \"slowbreak\"\n  };\n  await client.sendIQ(iq, stnza);\n}\n\nexport default function chatClient(username, password) {\n  client = XMPP.createClient({\n    jid: username,\n    password,\n    transports: {\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\n      bosh: \"false\"\n    }\n  }); //client.on(\"*\", console.log);\n\n  client.on(\"session:started\", () => {\n    client.subscribe(\"sumanth@mongoose.mysmartpbx.org\");\n    getContacts();\n    client.sendPresence();\n    addContact();\n  });\n  client.on(\"auth:failed\", () => {\n    console.log(\"xmpp authentication failed\");\n  });\n  return client;\n}\nexport const getContacts = async () => {\n  const contacts = await client.getRoster();\n  console.log(\"all contacts \", contacts.items);\n};","map":{"version":3,"sources":["D:/chat/stanza/chatClient.js"],"names":["XMPP","client","addContact","stnza","xmlns","type","from","username","id","name","sendIQ","iq","chatClient","password","createClient","jid","transports","websocket","bosh","on","subscribe","getContacts","sendPresence","console","log","contacts","getRoster","items"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;AACA,IAAIC,MAAJ;;AAEA,eAAeC,UAAf,GAA4B;AAC1B,MAAIC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE,kBADG;AAEVC,IAAAA,IAAI,EAAE,KAFI;AAGVC,IAAAA,IAAI,EAAEC,QAHI;AAIVC,IAAAA,EAAE,EAAE,SAJM;AAKVC,IAAAA,IAAI,EAAE;AALI,GAAZ;AAOA,QAAMR,MAAM,CAACS,MAAP,CAAcC,EAAd,EAAkBR,KAAlB,CAAN;AACD;;AACD,eAAe,SAASS,UAAT,CAAoBL,QAApB,EAA8BM,QAA9B,EAAwC;AACrDZ,EAAAA,MAAM,GAAGD,IAAI,CAACc,YAAL,CAAkB;AACzBC,IAAAA,GAAG,EAAER,QADoB;AAEzBM,IAAAA,QAFyB;AAGzBG,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,2CADD;AAEVC,MAAAA,IAAI,EAAE;AAFI;AAHa,GAAlB,CAAT,CADqD,CASrD;;AACAjB,EAAAA,MAAM,CAACkB,EAAP,CAAU,iBAAV,EAA6B,MAAM;AACjClB,IAAAA,MAAM,CAACmB,SAAP,CAAiB,iCAAjB;AACAC,IAAAA,WAAW;AACXpB,IAAAA,MAAM,CAACqB,YAAP;AACApB,IAAAA,UAAU;AACX,GALD;AAOAD,EAAAA,MAAM,CAACkB,EAAP,CAAU,aAAV,EAAyB,MAAM;AAC7BI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAFD;AAGA,SAAOvB,MAAP;AACD;AAED,OAAO,MAAMoB,WAAW,GAAG,YAAY;AACrC,QAAMI,QAAQ,GAAG,MAAMxB,MAAM,CAACyB,SAAP,EAAvB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,QAAQ,CAACE,KAAtC;AACD,CAHM","sourcesContent":["import * as XMPP from \"stanza\";\r\nlet client;\r\n\r\nasync function addContact() {\r\n  var stnza = {\r\n    xmlns: \"jabber:iq:roster\",\r\n    type: \"set\",\r\n    from: username,\r\n    id: \"roster4\",\r\n    name: \"slowbreak\",\r\n  };\r\n  await client.sendIQ(iq, stnza);\r\n}\r\nexport default function chatClient(username, password) {\r\n  client = XMPP.createClient({\r\n    jid: username,\r\n    password,\r\n    transports: {\r\n      websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\r\n      bosh: \"false\",\r\n    },\r\n  });\r\n  //client.on(\"*\", console.log);\r\n  client.on(\"session:started\", () => {\r\n    client.subscribe(\"sumanth@mongoose.mysmartpbx.org\");\r\n    getContacts();\r\n    client.sendPresence();\r\n    addContact();\r\n  });\r\n\r\n  client.on(\"auth:failed\", () => {\r\n    console.log(\"xmpp authentication failed\");\r\n  });\r\n  return client;\r\n}\r\n\r\nexport const getContacts = async () => {\r\n  const contacts = await client.getRoster();\r\n  console.log(\"all contacts \", contacts.items);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}