{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat\\\\containers\\\\leftSidebar\\\\contactSearch.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport dateTime from \"./datetime\";\nimport Logo from \"./1.jpg\";\nimport _ from \"lodash\";\nimport { Nav, TabContent } from \"reactstrap\";\nimport { fetchUsers, setChatWith, setActiveTab, chatededUsers, addNewUSer, removeRecentUser, updateLastMessageTime, setRoster } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction form() {\n  const dispatch = useDispatch();\n  const jid = useSelector(state => state.user.currentUser.jid);\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\n  const usersP = useSelector(state => state.user.users);\n  const filteredUsers = usersP.length > 0 && usersP[0].filter(user => user.id !== jidLoggedInUser);\n  const recentUsers = useSelector(state => state.user.chatedUsers);\n  const {\n    0: searchTerm,\n    1: setSearch\n  } = useState(null);\n  const {\n    0: chatSubTab,\n    1: setChatSubTab\n  } = useState(\"contacts\");\n  const {\n    0: onlineusers,\n    1: setOnlineusers\n  } = useState([]);\n  const client = useSelector(state => state.user.client);\n  let alluserStatus = useSelector(state => state.user.alluserStatus);\n  console.log(\"filteredUsers\", filteredUsers); // useEffect(() => {\n  //   dispatch(fetchUsers());\n  // }, []);\n\n  useEffect(() => {\n    mergedAray();\n    console.log(\"Online users\");\n  }, [alluserStatus, filteredUsers]);\n\n  const mergedAray = () => {\n    // const mergeArray =\n    //   filteredUsers &&\n    //   filteredUsers.map((userItem) => {\n    //     let classesItem = alluserStatus.find((item) => item.id === userItem.id);\n    //     return classesItem\n    //       ? { ...userItem, ...classesItem }\n    //       : { ...userItem, onlineStatus: \"offline\" };\n    //   });\n    // setOnlineusers(mergeArray);\n    console.log(\"Online users merged\");\n  };\n\n  const addNew = item => {\n    let found = false;\n    let foundID;\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\n\n    for (var i = 0; i < recentUsers.length; i++) {\n      if (recentUsers[i].id === item.id) {\n        found = true;\n        foundID = recentUsers[i].id;\n        break;\n      }\n    }\n    /* if contact is present append messages */\n\n\n    if (found) {\n      let objIndex = recentUsers.findIndex(obj => obj.id == foundID);\n      dispatch(updateLastMessageTime({\n        id: objIndex,\n        time: dateTime()\n      }));\n    }\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\n\n\n    if (!found) {\n      recentUsers.map(ci => {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n        }\n      });\n      dispatch(addNewUSer({\n        id: item.id,\n        first_name: item.first_name,\n        status: item.onlineusers,\n        mesg: `msg at ${dateTime()}`,\n        onlineStatus: item.onlineStatus,\n        lastMessageAt: dateTime()\n      }));\n    }\n  };\n\n  const changeChatClick = e => {\n    document.querySelectorAll(\".chat-main li\").forEach(item => {\n      item.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\n  };\n\n  const addToRoster = async item => {\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\n    console.log(\"jid\", jidd);\n    let contacts1 = await client.getRoster();\n    console.log(\"contacts1\", contacts1);\n    let length = contacts1.items.length;\n    let found = false;\n    length > 0 && contacts1.items.map(user => {\n      if (user.jid === jidd) {\n        console.log(\"user is in my  roster\");\n        found = true;\n      }\n    });\n\n    if (!found) {\n      console.log(\"not found\", client);\n      let obj = {\n        jid: jidd,\n        name: item.first_name,\n        groups: []\n      };\n      client.updateRosterItem(obj);\n      setTimeout(() => {\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\n        acceptRequest();\n      }, 1000);\n    }\n  };\n\n  const acceptRequest = () => {\n    console.log(\"listening\");\n    client.on(\"subscribe\", ReceivedPresence => client.acceptSubscription(ReceivedPresence.from));\n  };\n\n  if (!onlineusers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            type: \"search\",\n            placeholder: \"Search\",\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-tab\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            tabs: true,\n            id: \"myTab1\",\n            role: \"tablist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n            activeTab: chatSubTab,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-main\",\n              children: onlineusers.filter(data => {\n                if (searchTerm == null) {\n                  return data;\n                } else if (data.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return data;\n                }\n              }).map((chatlist, i) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `${1 === chatlist.id ? \"active\" : \"\"}`,\n                  onClick: e => {\n                    changeChatClick(e, chatlist);\n                    dispatch(setChatWith(chatlist.first_name));\n                    dispatch(setActiveTab(\"chat\"));\n                    dispatch(chatededUsers(\"new\"));\n                    addNew(chatlist, e);\n                    addToRoster(chatlist);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `profile ${chatlist.onlineStatus}`,\n                      style: {\n                        backgroundImage: `url(${Logo})`,\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center\",\n                        display: \"block\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"bg-img\",\n                        src: Logo,\n                        alt: \"Avatar\",\n                        style: {\n                          display: \"none\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details\",\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: chatlist.first_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"date-status\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ti-pin2\",\n                        onClick: e => Tipin(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\nexport default form;","map":{"version":3,"sources":["D:/chat/containers/leftSidebar/contactSearch.js"],"names":["React","useEffect","useSelector","useDispatch","useState","FormGroup","Input","dateTime","Logo","_","Nav","TabContent","fetchUsers","setChatWith","setActiveTab","chatededUsers","addNewUSer","removeRecentUser","updateLastMessageTime","setRoster","form","dispatch","jid","state","user","currentUser","jidLoggedInUser","split","usersP","users","filteredUsers","length","filter","id","recentUsers","chatedUsers","searchTerm","setSearch","chatSubTab","setChatSubTab","onlineusers","setOnlineusers","client","alluserStatus","console","log","mergedAray","addNew","item","found","foundID","i","objIndex","findIndex","obj","time","map","ci","hasOwnProperty","first_name","status","mesg","onlineStatus","lastMessageAt","changeChatClick","e","document","querySelectorAll","forEach","classList","remove","currentTarget","add","querySelector","addToRoster","jidd","contacts1","getRoster","items","name","groups","updateRosterItem","setTimeout","subscribe","acceptRequest","on","ReceivedPresence","acceptSubscription","from","target","value","data","toLowerCase","includes","chatlist","backgroundImage","backgroundSize","backgroundPosition","display","Tipin"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport dateTime from \"./datetime\";\r\nimport Logo from \"./1.jpg\";\r\nimport _ from \"lodash\";\r\nimport { Nav, TabContent } from \"reactstrap\";\r\nimport {\r\n  fetchUsers,\r\n  setChatWith,\r\n  setActiveTab,\r\n  chatededUsers,\r\n  addNewUSer,\r\n  removeRecentUser,\r\n  updateLastMessageTime,\r\n  setRoster,\r\n} from \"../../redux/actions/index\";\r\n\r\nfunction form() {\r\n  const dispatch = useDispatch();\r\n  const jid = useSelector((state) => state.user.currentUser.jid);\r\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\r\n  const usersP = useSelector((state) => state.user.users);\r\n  const filteredUsers =\r\n    usersP.length > 0 &&\r\n    usersP[0].filter((user) => user.id !== jidLoggedInUser);\r\n  const recentUsers = useSelector((state) => state.user.chatedUsers);\r\n  const [searchTerm, setSearch] = useState(null);\r\n  const [chatSubTab, setChatSubTab] = useState(\"contacts\");\r\n  const [onlineusers, setOnlineusers] = useState([]);\r\n  const client = useSelector((state) => state.user.client);\r\n  let alluserStatus = useSelector((state) => state.user.alluserStatus);\r\n  console.log(\"filteredUsers\", filteredUsers);\r\n  // useEffect(() => {\r\n  //   dispatch(fetchUsers());\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    mergedAray();\r\n    console.log(\"Online users\");\r\n  }, [alluserStatus, filteredUsers]);\r\n\r\n  const mergedAray = () => {\r\n    // const mergeArray =\r\n    //   filteredUsers &&\r\n    //   filteredUsers.map((userItem) => {\r\n    //     let classesItem = alluserStatus.find((item) => item.id === userItem.id);\r\n    //     return classesItem\r\n    //       ? { ...userItem, ...classesItem }\r\n    //       : { ...userItem, onlineStatus: \"offline\" };\r\n    //   });\r\n    // setOnlineusers(mergeArray);\r\n    console.log(\"Online users merged\");\r\n  };\r\n\r\n  const addNew = (item) => {\r\n    let found = false;\r\n    let foundID;\r\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\r\n    for (var i = 0; i < recentUsers.length; i++) {\r\n      if (recentUsers[i].id === item.id) {\r\n        found = true;\r\n        foundID = recentUsers[i].id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* if contact is present append messages */\r\n    if (found) {\r\n      let objIndex = recentUsers.findIndex((obj) => obj.id == foundID);\r\n      dispatch(updateLastMessageTime({ id: objIndex, time: dateTime() }));\r\n    }\r\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\r\n    if (!found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n        }\r\n      });\r\n      dispatch(\r\n        addNewUSer({\r\n          id: item.id,\r\n          first_name: item.first_name,\r\n          status: item.onlineusers,\r\n          mesg: `msg at ${dateTime()}`,\r\n          onlineStatus: item.onlineStatus,\r\n          lastMessageAt: dateTime(),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeChatClick = (e) => {\r\n    document.querySelectorAll(\".chat-main li\").forEach((item) => {\r\n      item.classList.remove(\"active\");\r\n    });\r\n    e.currentTarget.classList.add(\"active\");\r\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\r\n  };\r\n\r\n  const addToRoster = async (item) => {\r\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\r\n    console.log(\"jid\", jidd);\r\n    let contacts1 = await client.getRoster();\r\n    console.log(\"contacts1\", contacts1);\r\n    let length = contacts1.items.length;\r\n    let found = false;\r\n    length > 0 &&\r\n      contacts1.items.map((user) => {\r\n        if (user.jid === jidd) {\r\n          console.log(\"user is in my  roster\");\r\n          found = true;\r\n        }\r\n      });\r\n\r\n    if (!found) {\r\n      console.log(\"not found\", client);\r\n      let obj = {\r\n        jid: jidd,\r\n        name: item.first_name,\r\n        groups: [],\r\n      };\r\n      client.updateRosterItem(obj);\r\n      setTimeout(() => {\r\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\r\n        acceptRequest();\r\n      }, 1000);\r\n    }\r\n  };\r\n  const acceptRequest = () => {\r\n    console.log(\"listening\");\r\n    client.on(\"subscribe\", (ReceivedPresence) =>\r\n      client.acceptSubscription(ReceivedPresence.from)\r\n    );\r\n  };\r\n\r\n  if (!onlineusers) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <form>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <div className=\"theme-tab\">\r\n            <Nav tabs id=\"myTab1\" role=\"tablist\"></Nav>\r\n            <TabContent activeTab={chatSubTab}>\r\n              <ul className=\"chat-main\">\r\n                {onlineusers\r\n                  .filter((data) => {\r\n                    if (searchTerm == null) {\r\n                      return data;\r\n                    } else if (\r\n                      data.first_name\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase())\r\n                    ) {\r\n                      return data;\r\n                    }\r\n                  })\r\n                  .map((chatlist, i) => {\r\n                    return (\r\n                      <li\r\n                        className={`${1 === chatlist.id ? \"active\" : \"\"}`}\r\n                        key={i}\r\n                        onClick={(e) => {\r\n                          changeChatClick(e, chatlist);\r\n                          dispatch(setChatWith(chatlist.first_name));\r\n                          dispatch(setActiveTab(\"chat\"));\r\n                          dispatch(chatededUsers(\"new\"));\r\n                          addNew(chatlist, e);\r\n                          addToRoster(chatlist);\r\n                        }}\r\n                      >\r\n                        <div className=\"chat-box\">\r\n                          <div\r\n                            className={`profile ${chatlist.onlineStatus}`}\r\n                            style={{\r\n                              backgroundImage: `url(${Logo})`,\r\n                              backgroundSize: \"cover\",\r\n                              backgroundPosition: \"center\",\r\n                              display: \"block\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              className=\"bg-img\"\r\n                              src={Logo}\r\n                              alt=\"Avatar\"\r\n                              style={{ display: \"none\" }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"details\">\r\n                            <h5>{chatlist.first_name}</h5>\r\n                            {/* <h6>{chatlist.mesg}</h6> */}\r\n                          </div>\r\n                          <div className=\"date-status\">\r\n                            <i\r\n                              className=\"ti-pin2\"\r\n                              onClick={(e) => Tipin(e)}\r\n                            ></i>\r\n                            {/* <h6>{chatlist.lastSeenDate}</h6> */}\r\n                            {/* {chatlist.status === \"Sending\" || \"Failed\" || \"Seen\" ? (\r\n                      <h6\r\n                        className={`${\r\n                          chatlist.status === \"Sending\"\r\n                            ? \"font-dark\"\r\n                            : chatlist.status === \"Failed\"\r\n                            ? \"font-danger\"\r\n                            : \"font-success\"\r\n                        }  status`}\r\n                      >\r\n                        {chatlist.status === \"8\" ? \"\" : chatlist.status}\r\n                      </h6>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                            {/* {chatlist.status === \"8\" ? (\r\n                      <div className=\"badge badge-primary sm\">\r\n                        {chatlist.status}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </TabContent>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}