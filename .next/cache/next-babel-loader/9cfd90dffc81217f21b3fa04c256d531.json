{"ast":null,"code":"export const isFormValid = (username, password, accountName) => {\n  if (isFormEmpty(username, password, accountName)) {\n    return false;\n  } else {\n    return true;\n  }\n};\nexport const isFormEmpty = (username, password, accountName) => {\n  return !username.length || !password.length || !accountName;\n};\n\nconst verifyKazooCredentials = async (encriptedCredentials, accountName) => {\n  try {\n    let res = await axios.put(AUTH, {\n      data: {\n        credentials: encriptedCredentials,\n        account_name: accountName\n      }\n    });\n\n    if (res.status === 201) {\n      console.log(res);\n\n      const _username = res.data.data.owner_id + \"@\" + DOMAIN;\n\n      doConnection(_username);\n    } else {\n      console.log(\"username or password or accountName wrong\");\n    }\n  } catch (err) {\n    console.log(\"error: \" + err);\n  }\n};","map":{"version":3,"sources":["D:/chat/pages/auth/signIn/functions.js"],"names":["isFormValid","username","password","accountName","isFormEmpty","length","verifyKazooCredentials","encriptedCredentials","res","axios","put","AUTH","data","credentials","account_name","status","console","log","_username","owner_id","DOMAIN","doConnection","err"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,WAArB,KAAqC;AAC9D,MAAIC,WAAW,CAACH,QAAD,EAAWC,QAAX,EAAqBC,WAArB,CAAf,EAAkD;AAChD,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CANM;AAQP,OAAO,MAAMC,WAAW,GAAG,CAACH,QAAD,EAAWC,QAAX,EAAqBC,WAArB,KAAqC;AAC9D,SAAO,CAACF,QAAQ,CAACI,MAAV,IAAoB,CAACH,QAAQ,CAACG,MAA9B,IAAwC,CAACF,WAAhD;AACD,CAFM;;AAIP,MAAMG,sBAAsB,GAAG,OAAOC,oBAAP,EAA6BJ,WAA7B,KAA6C;AAC1E,MAAI;AACF,QAAIK,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAUC,IAAV,EAAgB;AAC9BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAEN,oBADT;AAEJO,QAAAA,YAAY,EAAEX;AAFV;AADwB,KAAhB,CAAhB;;AAOA,QAAIK,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;;AACA,YAAMU,SAAS,GAAGV,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAcO,QAAd,GAAyB,GAAzB,GAA+BC,MAAjD;;AACAC,MAAAA,YAAY,CAACH,SAAD,CAAZ;AACD,KAJD,MAIO;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD;AACF,GAfD,CAeE,OAAOK,GAAP,EAAY;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYK,GAAxB;AACD;AACF,CAnBD","sourcesContent":["export const isFormValid = (username, password, accountName) => {\r\n  if (isFormEmpty(username, password, accountName)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const isFormEmpty = (username, password, accountName) => {\r\n  return !username.length || !password.length || !accountName;\r\n};\r\n\r\nconst verifyKazooCredentials = async (encriptedCredentials, accountName) => {\r\n  try {\r\n    let res = await axios.put(AUTH, {\r\n      data: {\r\n        credentials: encriptedCredentials,\r\n        account_name: accountName,\r\n      },\r\n    });\r\n\r\n    if (res.status === 201) {\r\n      console.log(res);\r\n      const _username = res.data.data.owner_id + \"@\" + DOMAIN;\r\n      doConnection(_username);\r\n    } else {\r\n      console.log(\"username or password or accountName wrong\");\r\n    }\r\n  } catch (err) {\r\n    console.log(\"error: \" + err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}