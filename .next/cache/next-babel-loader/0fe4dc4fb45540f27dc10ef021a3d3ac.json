{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat\\\\containers\\\\leftSidebar\\\\contactSearch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport dateTime from \"./datetime\";\nimport Logo from \"./1.jpg\";\nimport { Nav, TabContent } from \"reactstrap\";\nimport Avatar from \"react-avatar\";\nimport { Phone, Video } from \"react-feather\";\nimport { fetchUsers, setChatWith, setActiveTab, chatededUsers, addNewUSer, removeRecentUser, updateLastMessageTime, setAllUsers } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction form() {\n  let onlineU;\n  const dispatch = useDispatch();\n  const jid = useSelector(state => state.user.currentUser.jid);\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\n  const usersP = useSelector(state => state.user.users);\n  const allusers = useSelector(state => state.user.allusers);\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState(\"\");\n  let filteredUsers;\n  const recentUsers = useSelector(state => state.user.chatedUsers);\n  const chatWithID = useSelector(state => state.user.chatWith.id);\n  const {\n    0: searchTerm,\n    1: setSearch\n  } = useState(null);\n  const {\n    0: chatSubTab,\n    1: setChatSubTab\n  } = useState(\"contacts\");\n  const {\n    0: onlineusers,\n    1: setOnlineusers\n  } = useState([]);\n  const client = useSelector(state => state.user.client);\n  let alluserStatus = useSelector(state => state.user.alluserStatus);\n\n  const filterd = () => {\n    filteredUsers = usersP.length > 0 && usersP[0].filter(user => user.id !== jidLoggedInUser);\n    return filteredUsers;\n  };\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n  useEffect(() => {\n    setFiltered(filterd());\n  }, [usersP]);\n  useEffect(() => {\n    console.log(\"useeffect 2nd\", alluserStatus, filteredUsers, filtered);\n\n    if (filtered && alluserStatus) {\n      onlineU = mergedAray();\n      console.log(\"Online users\", alluserStatus, filtered, filteredUsers);\n      setOnlineusers(onlineU);\n    }\n  }, [alluserStatus, filtered]);\n\n  const mergedAray = () => {\n    const mergeArray = filtered && filtered.map(userItem => {\n      let classesItem = alluserStatus.find(item => item.id === userItem.id);\n      return classesItem ? _objectSpread(_objectSpread({}, userItem), classesItem) : _objectSpread(_objectSpread({}, userItem), {}, {\n        onlineStatus: \"offline\"\n      });\n    });\n    console.log(\"Online users merged\", mergeArray);\n    return mergeArray;\n  }; //This function is used to add new user in the recent users\n\n\n  const addNew = item => {\n    let found = false;\n    let foundID;\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\n\n    for (var i = 0; i < recentUsers.length; i++) {\n      console.log(\"new item id\", item.id);\n\n      if (recentUsers[i].id === item.id + \"@mongoose.mysmartpbx.org\") {\n        found = true;\n        foundID = recentUsers[i].id;\n        break;\n      }\n    }\n    /* if user is already present then remove all users without message attribute then add into recent list*/\n\n\n    if (found) {\n      recentUsers.map(ci => {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n          dispatch(addNewUSer({\n            id: item.id + \"@mongoose.mysmartpbx.org\",\n            first_name: item.first_name,\n            status: item.onlineusers,\n            onlineStatus: item.onlineStatus,\n            status: item.onlineStatus\n          }));\n        }\n      });\n    }\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\n\n\n    if (!found) {\n      recentUsers.map(ci => {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n          console.log(\"remove first\");\n        }\n      });\n      dispatch(addNewUSer({\n        id: item.id + \"@mongoose.mysmartpbx.org\",\n        first_name: item.first_name,\n        status: item.onlineusers,\n        onlineStatus: item.onlineStatus,\n        status: item.onlineStatus\n      }));\n    }\n  };\n\n  const changeChatClick = e => {\n    document.querySelectorAll(\".chat-main li\").forEach(item => {\n      item.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\n  }; //This is used to send frind request ,it sends xmpp mesage if any user is not in our roster\n\n\n  const addToRoster = async item => {\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\n    let contacts1 = await client.getRoster();\n    let length = contacts1.items.length;\n    let found = false;\n    length > 0 && contacts1.items.map(user => {\n      if (user.jid === jidd) {\n        console.log(\"user is in my  roster\");\n        found = true;\n      }\n    });\n\n    if (!found) {\n      console.log(\"not found\", client);\n      let obj = {\n        jid: jidd,\n        name: item.first_name,\n        groups: []\n      };\n      client.updateRosterItem(obj);\n      setTimeout(() => {\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\n        acceptRequest();\n      }, 1000);\n    }\n  };\n\n  const acceptRequest = () => {\n    console.log(\"listening\");\n    client.on(\"subscribe\", ReceivedPresence => client.acceptSubscription(ReceivedPresence.from));\n  };\n\n  if (!onlineusers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  } else if (!filtered) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            type: \"search\",\n            placeholder: \"Search\",\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-tab tab-icon\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            tabs: true,\n            id: \"myTab1\",\n            role: \"tablist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n            activeTab: chatSubTab,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"contact-log-main\",\n              children: onlineusers.filter(data => {\n                if (searchTerm == null) {\n                  return data;\n                } else if (data.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return data;\n                }\n              }).map((chatlist, i) => {\n                chatlist[\"status\"] = \"sending\";\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `${chatWithID === chatlist.id + \"@mongoose.mysmartpbx.org\" ? \"active\" : \"\"}`,\n                  onClick: e => {\n                    changeChatClick(e, chatlist);\n                    dispatch(setChatWith({\n                      name: chatlist.first_name,\n                      status: chatlist.onlineStatus,\n                      id: chatlist.id + \"@mongoose.mysmartpbx.org\"\n                    }));\n                    dispatch(setActiveTab(\"chat\"));\n                    dispatch(chatededUsers(\"new\"));\n                    addNew(chatlist, e);\n                    addToRoster(chatlist);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"contact-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `profile ${chatlist.onlineStatus}`,\n                      style: {\n                        backgroundImage: `url(${Logo})`,\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center\",\n                        display: \"block\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"bg-img\",\n                        src: Logo,\n                        alt: \"Avatar\",\n                        style: {\n                          display: \"none\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: chatlist.first_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        children: \"+21 3523 25544 \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"contact-action\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icon-btn btn-outline-primary btn-sm button-effect\",\n                        children: /*#__PURE__*/_jsxDEV(Phone, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 253,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icon-btn btn-outline-success btn-sm button-effect\",\n                        children: /*#__PURE__*/_jsxDEV(Video, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\nexport default form;","map":{"version":3,"sources":["D:/chat/containers/leftSidebar/contactSearch.js"],"names":["React","useEffect","useSelector","useDispatch","useState","FormGroup","Input","dateTime","Logo","Nav","TabContent","Avatar","Phone","Video","fetchUsers","setChatWith","setActiveTab","chatededUsers","addNewUSer","removeRecentUser","updateLastMessageTime","setAllUsers","form","onlineU","dispatch","jid","state","user","currentUser","jidLoggedInUser","split","usersP","users","allusers","filtered","setFiltered","filteredUsers","recentUsers","chatedUsers","chatWithID","chatWith","id","searchTerm","setSearch","chatSubTab","setChatSubTab","onlineusers","setOnlineusers","client","alluserStatus","filterd","length","filter","console","log","mergedAray","mergeArray","map","userItem","classesItem","find","item","onlineStatus","addNew","found","foundID","i","ci","hasOwnProperty","first_name","status","changeChatClick","e","document","querySelectorAll","forEach","classList","remove","currentTarget","add","querySelector","addToRoster","jidd","contacts1","getRoster","items","obj","name","groups","updateRosterItem","setTimeout","subscribe","acceptRequest","on","ReceivedPresence","acceptSubscription","from","target","value","data","toLowerCase","includes","chatlist","backgroundImage","backgroundSize","backgroundPosition","display"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport dateTime from \"./datetime\";\r\nimport Logo from \"./1.jpg\";\r\nimport { Nav, TabContent } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Phone, Video } from \"react-feather\";\r\nimport {\r\n  fetchUsers,\r\n  setChatWith,\r\n  setActiveTab,\r\n  chatededUsers,\r\n  addNewUSer,\r\n  removeRecentUser,\r\n  updateLastMessageTime,\r\n  setAllUsers,\r\n} from \"../../redux/actions/index\";\r\n\r\nfunction form() {\r\n  let onlineU;\r\n  const dispatch = useDispatch();\r\n  const jid = useSelector((state) => state.user.currentUser.jid);\r\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\r\n  const usersP = useSelector((state) => state.user.users);\r\n  const allusers = useSelector((state) => state.user.allusers);\r\n  const [filtered, setFiltered] = useState(\"\");\r\n  let filteredUsers;\r\n\r\n  const recentUsers = useSelector((state) => state.user.chatedUsers);\r\n  const chatWithID = useSelector((state) => state.user.chatWith.id);\r\n  const [searchTerm, setSearch] = useState(null);\r\n  const [chatSubTab, setChatSubTab] = useState(\"contacts\");\r\n  const [onlineusers, setOnlineusers] = useState([]);\r\n  const client = useSelector((state) => state.user.client);\r\n  let alluserStatus = useSelector((state) => state.user.alluserStatus);\r\n  const filterd = () => {\r\n    filteredUsers =\r\n      usersP.length > 0 &&\r\n      usersP[0].filter((user) => user.id !== jidLoggedInUser);\r\n\r\n    return filteredUsers;\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFiltered(filterd());\r\n  }, [usersP]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useeffect 2nd\", alluserStatus, filteredUsers, filtered);\r\n    if (filtered && alluserStatus) {\r\n      onlineU = mergedAray();\r\n      console.log(\"Online users\", alluserStatus, filtered, filteredUsers);\r\n      setOnlineusers(onlineU);\r\n    }\r\n  }, [alluserStatus, filtered]);\r\n\r\n  const mergedAray = () => {\r\n    const mergeArray =\r\n      filtered &&\r\n      filtered.map((userItem) => {\r\n        let classesItem = alluserStatus.find((item) => item.id === userItem.id);\r\n        return classesItem\r\n          ? { ...userItem, ...classesItem }\r\n          : { ...userItem, onlineStatus: \"offline\" };\r\n      });\r\n\r\n    console.log(\"Online users merged\", mergeArray);\r\n    return mergeArray;\r\n  };\r\n\r\n  //This function is used to add new user in the recent users\r\n  const addNew = (item) => {\r\n    let found = false;\r\n    let foundID;\r\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\r\n    for (var i = 0; i < recentUsers.length; i++) {\r\n      console.log(\"new item id\", item.id);\r\n      if (recentUsers[i].id === item.id + \"@mongoose.mysmartpbx.org\") {\r\n        found = true;\r\n        foundID = recentUsers[i].id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* if user is already present then remove all users without message attribute then add into recent list*/\r\n    if (found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n          dispatch(\r\n            addNewUSer({\r\n              id: item.id + \"@mongoose.mysmartpbx.org\",\r\n              first_name: item.first_name,\r\n              status: item.onlineusers,\r\n              onlineStatus: item.onlineStatus,\r\n              status: item.onlineStatus,\r\n            })\r\n          );\r\n        }\r\n      });\r\n    }\r\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\r\n    if (!found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n          console.log(\"remove first\");\r\n        }\r\n      });\r\n      dispatch(\r\n        addNewUSer({\r\n          id: item.id + \"@mongoose.mysmartpbx.org\",\r\n          first_name: item.first_name,\r\n          status: item.onlineusers,\r\n          onlineStatus: item.onlineStatus,\r\n          status: item.onlineStatus,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeChatClick = (e) => {\r\n    document.querySelectorAll(\".chat-main li\").forEach((item) => {\r\n      item.classList.remove(\"active\");\r\n    });\r\n    e.currentTarget.classList.add(\"active\");\r\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\r\n  };\r\n\r\n  //This is used to send frind request ,it sends xmpp mesage if any user is not in our roster\r\n  const addToRoster = async (item) => {\r\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\r\n    let contacts1 = await client.getRoster();\r\n    let length = contacts1.items.length;\r\n    let found = false;\r\n    length > 0 &&\r\n      contacts1.items.map((user) => {\r\n        if (user.jid === jidd) {\r\n          console.log(\"user is in my  roster\");\r\n          found = true;\r\n        }\r\n      });\r\n\r\n    if (!found) {\r\n      console.log(\"not found\", client);\r\n      let obj = {\r\n        jid: jidd,\r\n        name: item.first_name,\r\n        groups: [],\r\n      };\r\n      client.updateRosterItem(obj);\r\n      setTimeout(() => {\r\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\r\n        acceptRequest();\r\n      }, 1000);\r\n    }\r\n  };\r\n  const acceptRequest = () => {\r\n    console.log(\"listening\");\r\n    client.on(\"subscribe\", (ReceivedPresence) =>\r\n      client.acceptSubscription(ReceivedPresence.from)\r\n    );\r\n  };\r\n\r\n  if (!onlineusers) {\r\n    return <div>Loading...</div>;\r\n  } else if (!filtered) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <form>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <div className=\"theme-tab tab-icon\">\r\n            <Nav tabs id=\"myTab1\" role=\"tablist\"></Nav>\r\n            <TabContent activeTab={chatSubTab}>\r\n              <ul className=\"contact-log-main\">\r\n                {onlineusers\r\n                  .filter((data) => {\r\n                    if (searchTerm == null) {\r\n                      return data;\r\n                    } else if (\r\n                      data.first_name\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase())\r\n                    ) {\r\n                      return data;\r\n                    }\r\n                  })\r\n                  .map((chatlist, i) => {\r\n                    chatlist[\"status\"] = \"sending\";\r\n                    return (\r\n                      <li\r\n                        className={`${\r\n                          chatWithID ===\r\n                          chatlist.id + \"@mongoose.mysmartpbx.org\"\r\n                            ? \"active\"\r\n                            : \"\"\r\n                        }`}\r\n                        key={i}\r\n                        onClick={(e) => {\r\n                          changeChatClick(e, chatlist);\r\n                          dispatch(\r\n                            setChatWith({\r\n                              name: chatlist.first_name,\r\n                              status: chatlist.onlineStatus,\r\n                              id: chatlist.id + \"@mongoose.mysmartpbx.org\",\r\n                            })\r\n                          );\r\n                          dispatch(setActiveTab(\"chat\"));\r\n                          dispatch(chatededUsers(\"new\"));\r\n                          addNew(chatlist, e);\r\n                          addToRoster(chatlist);\r\n                        }}\r\n                      >\r\n                        <div className=\"contact-box\">\r\n                          <div\r\n                            className={`profile ${chatlist.onlineStatus}`}\r\n                            style={{\r\n                              backgroundImage: `url(${Logo})`,\r\n                              backgroundSize: \"cover\",\r\n                              backgroundPosition: \"center\",\r\n                              display: \"block\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              className=\"bg-img\"\r\n                              src={Logo}\r\n                              alt=\"Avatar\"\r\n                              style={{ display: \"none\" }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"details\">\r\n                            <h5>{chatlist.first_name}</h5>\r\n                            <h6>+21 3523 25544 </h6>\r\n                          </div>\r\n                          <div className=\"contact-action\">\r\n                            <div className=\"icon-btn btn-outline-primary btn-sm button-effect\">\r\n                              <Phone />\r\n                            </div>\r\n                            <div className=\"icon-btn btn-outline-success btn-sm button-effect\">\r\n                              <Video />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </TabContent>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}