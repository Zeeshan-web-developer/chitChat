{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/types\";\nimport { combineReducers } from \"redux\";\nvar initialState = {\n  currentUser: null,\n  accountId: null,\n  userStatus: \"unavailable\",\n  client: null,\n  loginErrors: [],\n  loading: false,\n  activeTab: \"chat\",\n  users: [],\n  chatWith: null,\n  newContact: \"contact\",\n  compuntUnmount: {}\n};\n\nvar user_reducer = function user_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: action.payload\n      });\n\n    case actionTypes.SET_USER_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userStatus: action.payload\n      });\n\n    case actionTypes.SET_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        client: action.payload\n      });\n\n    case actionTypes.LOGIN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginErrors: [action.payload]\n      });\n\n    case actionTypes.LOGIN_LODING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: action.payload\n      });\n\n    case actionTypes.SET_ACTIVE_TAB:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTab: action.payload\n      });\n\n    case actionTypes.SET_USERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [action.payload]\n      });\n\n    case actionTypes.SET_CHAT_WITH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatWith: action.payload\n      });\n\n    case actionTypes.SET_CHATED_USERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newContact: action.payload\n      });\n\n    case actionTypes.CHAT_COMPONENT_UNMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        compuntUnmount: action.payload\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: user_reducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/chat/redux/reducers/index.js"],"names":["actionTypes","combineReducers","initialState","currentUser","accountId","userStatus","client","loginErrors","loading","activeTab","users","chatWith","newContact","compuntUnmount","user_reducer","state","action","type","SET_USER","payload","SET_USER_STATUS","SET_CLIENT","LOGIN_ERROR","LOGIN_LODING","SET_ACTIVE_TAB","SET_USERS","SET_CHAT_WITH","SET_CHATED_USERS","CHAT_COMPONENT_UNMOUNT","rootReducer","user"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,UAAU,EAAE,aAHO;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,WAAW,EAAE,EALM;AAMnBC,EAAAA,OAAO,EAAE,KANU;AAOnBC,EAAAA,SAAS,EAAE,MAPQ;AAQnBC,EAAAA,KAAK,EAAE,EARY;AASnBC,EAAAA,QAAQ,EAAE,IATS;AAUnBC,EAAAA,UAAU,EAAE,SAVO;AAWnBC,EAAAA,cAAc,EAAE;AAXG,CAArB;;AAaA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAW,CAACkB,QAAjB;AACE,6CACKH,KADL;AAEEZ,QAAAA,WAAW,EAAEa,MAAM,CAACG;AAFtB;;AAIF,SAAKnB,WAAW,CAACoB,eAAjB;AACE,6CACKL,KADL;AAEEV,QAAAA,UAAU,EAAEW,MAAM,CAACG;AAFrB;;AAIF,SAAKnB,WAAW,CAACqB,UAAjB;AACE,6CACKN,KADL;AAEET,QAAAA,MAAM,EAAEU,MAAM,CAACG;AAFjB;;AAIF,SAAKnB,WAAW,CAACsB,WAAjB;AACE,6CACKP,KADL;AAEER,QAAAA,WAAW,EAAE,CAACS,MAAM,CAACG,OAAR;AAFf;;AAIF,SAAKnB,WAAW,CAACuB,YAAjB;AACE,6CACKR,KADL;AAEEP,QAAAA,OAAO,EAAEQ,MAAM,CAACG;AAFlB;;AAKF,SAAKnB,WAAW,CAACwB,cAAjB;AACE,6CACKT,KADL;AAEEN,QAAAA,SAAS,EAAEO,MAAM,CAACG;AAFpB;;AAIF,SAAKnB,WAAW,CAACyB,SAAjB;AACE,6CACKV,KADL;AAEEL,QAAAA,KAAK,EAAE,CAACM,MAAM,CAACG,OAAR;AAFT;;AAIF,SAAKnB,WAAW,CAAC0B,aAAjB;AACE,6CACKX,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACG;AAFnB;;AAIF,SAAKnB,WAAW,CAAC2B,gBAAjB;AACE,6CACKZ,KADL;AAEEH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAFrB;;AAKF,SAAKnB,WAAW,CAAC4B,sBAAjB;AACE,6CACKb,KADL;AAEEF,QAAAA,cAAc,EAAEG,MAAM,CAACG;AAFzB;;AAIF;AAAS;AACP,eAAOJ,KAAP;AACD;AAvDH;AAyDD,CA1DD;;AA4DA,IAAMc,WAAW,GAAG5B,eAAe,CAAC;AAClC6B,EAAAA,IAAI,EAAEhB;AAD4B,CAAD,CAAnC;AAGA,eAAee,WAAf","sourcesContent":["import * as actionTypes from \"../actions/types\";\r\nimport { combineReducers } from \"redux\";\r\nconst initialState = {\r\n  currentUser: null,\r\n  accountId: null,\r\n  userStatus: \"unavailable\",\r\n  client: null,\r\n  loginErrors: [],\r\n  loading: false,\r\n  activeTab: \"chat\",\r\n  users: [],\r\n  chatWith: null,\r\n  newContact: \"contact\",\r\n  compuntUnmount: {},\r\n};\r\nconst user_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    case actionTypes.SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        userStatus: action.payload,\r\n      };\r\n    case actionTypes.SET_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: action.payload,\r\n      };\r\n    case actionTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loginErrors: [action.payload],\r\n      };\r\n    case actionTypes.LOGIN_LODING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case actionTypes.SET_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.payload,\r\n      };\r\n    case actionTypes.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [action.payload],\r\n      };\r\n    case actionTypes.SET_CHAT_WITH:\r\n      return {\r\n        ...state,\r\n        chatWith: action.payload,\r\n      };\r\n    case actionTypes.SET_CHATED_USERS:\r\n      return {\r\n        ...state,\r\n        newContact: action.payload,\r\n      };\r\n\r\n    case actionTypes.CHAT_COMPONENT_UNMOUNT:\r\n      return {\r\n        ...state,\r\n        compuntUnmount: action.payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n});\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}