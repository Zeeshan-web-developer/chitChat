{"ast":null,"code":"var _this = this;\n\nimport * as XMPP from \"stanza\";\nexport default ChatClient = {\n  create: create = function create(username, password) {\n    var client = XMPP.createClient({\n      jid: username,\n      password: password,\n      transports: {\n        websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\n        bosh: \"false\"\n      }\n    });\n    client.on(\"session:started\", function () {\n      client.getRoster();\n      client.sendPresence();\n    });\n    client.on(\"auth:failed\", console.log(\"Failed\"));\n    client.on(\"auth:success\", console.log(\"auth success\")); // client.on(\"*\", console.log);\n\n    client.on(\"message\", _this.onMessage);\n    client.on(\"message\", function (msg) {\n      return console.log(\"Message is as: \" + JSON.stringify(msg));\n    });\n    _this.client = client;\n    return client;\n  }\n};","map":{"version":3,"sources":["D:/chat/stanza/chatClient.js"],"names":["XMPP","ChatClient","create","username","password","client","createClient","jid","transports","websocket","bosh","on","getRoster","sendPresence","console","log","onMessage","msg","JSON","stringify"],"mappings":";;AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;AAEA,eAAeC,UAAU,GAAG;AAC1BC,EAAAA,MAAM,EAAGA,MAAM,GAAG,gBAACC,QAAD,EAAWC,QAAX,EAAwB;AACxC,QAAMC,MAAM,GAAGL,IAAI,CAACM,YAAL,CAAkB;AAC/BC,MAAAA,GAAG,EAAEJ,QAD0B;AAE/BC,MAAAA,QAAQ,EAARA,QAF+B;AAG/BI,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,2CADD;AAEVC,QAAAA,IAAI,EAAE;AAFI;AAHmB,KAAlB,CAAf;AAQAL,IAAAA,MAAM,CAACM,EAAP,CAAU,iBAAV,EAA6B,YAAM;AACjCN,MAAAA,MAAM,CAACO,SAAP;AACAP,MAAAA,MAAM,CAACQ,YAAP;AACD,KAHD;AAIAR,IAAAA,MAAM,CAACM,EAAP,CAAU,aAAV,EAAyBG,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAzB;AACAV,IAAAA,MAAM,CAACM,EAAP,CAAU,cAAV,EAA0BG,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA1B,EAdwC,CAexC;;AACAV,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,KAAI,CAACK,SAA1B;AACAX,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,UAACM,GAAD;AAAA,aACnBH,OAAO,CAACC,GAAR,CAAY,oBAAoBG,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAhC,CADmB;AAAA,KAArB;AAGA,IAAA,KAAI,CAACZ,MAAL,GAAcA,MAAd;AACA,WAAOA,MAAP;AACD;AAvByB,CAA5B","sourcesContent":["import * as XMPP from \"stanza\";\r\n\r\nexport default ChatClient = {\r\n  create: (create = (username, password) => {\r\n    const client = XMPP.createClient({\r\n      jid: username,\r\n      password,\r\n      transports: {\r\n        websocket: \"ws://mongoose.mysmartpbx.org:5280/ws-xmpp\",\r\n        bosh: \"false\",\r\n      },\r\n    });\r\n    client.on(\"session:started\", () => {\r\n      client.getRoster();\r\n      client.sendPresence();\r\n    });\r\n    client.on(\"auth:failed\", console.log(\"Failed\"));\r\n    client.on(\"auth:success\", console.log(\"auth success\"));\r\n    // client.on(\"*\", console.log);\r\n    client.on(\"message\", this.onMessage);\r\n    client.on(\"message\", (msg) =>\r\n      console.log(\"Message is as: \" + JSON.stringify(msg))\r\n    );\r\n    this.client = client;\r\n    return client;\r\n  }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}