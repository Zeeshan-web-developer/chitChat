{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\chat\\\\containers\\\\leftSidebar\\\\contactSearch.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport dateTime from \"./datetime\";\nimport Logo from \"./1.jpg\";\nimport _ from \"lodash\";\nimport { Nav, TabContent } from \"reactstrap\";\nimport { fetchUsers, setChatWith, setActiveTab, chatededUsers, addNewUSer, removeRecentUser, updateLastMessageTime, setAllUsers } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction form() {\n  _s();\n\n  var _this = this;\n\n  var onlineU;\n  var dispatch = useDispatch();\n  var jid = useSelector(function (state) {\n    return state.user.currentUser.jid;\n  });\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\n  var usersP = useSelector(function (state) {\n    return state.user.users;\n  });\n  var allusers = useSelector(function (state) {\n    return state.user.allusers;\n  });\n\n  var _useState = useState(\"\"),\n      filtered = _useState[0],\n      setFiltered = _useState[1];\n\n  var filteredUsers;\n  var recentUsers = useSelector(function (state) {\n    return state.user.chatedUsers;\n  });\n\n  var _useState2 = useState(null),\n      searchTerm = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(\"contacts\"),\n      chatSubTab = _useState3[0],\n      setChatSubTab = _useState3[1];\n\n  var _useState4 = useState([]),\n      onlineusers = _useState4[0],\n      setOnlineusers = _useState4[1];\n\n  var client = useSelector(function (state) {\n    return state.user.client;\n  });\n  var alluserStatus = useSelector(function (state) {\n    return state.user.alluserStatus;\n  });\n\n  var _useState5 = useState(alluserStatus),\n      allStatus = _useState5[0],\n      setAllStatus = _useState5[1];\n\n  var filterd = function filterd() {\n    filteredUsers = usersP.length > 0 && usersP[0].filter(function (user) {\n      return user.id !== jidLoggedInUser;\n    });\n    console.log(\"userp\", usersP);\n    console.log(\"filteredUsers\", filteredUsers);\n    return filteredUsers;\n  }; // dispatch(fetchUsers());\n\n\n  console.log(\"filtered\", filtered); // useEffect(() => {\n  // }, []);\n\n  useEffect(function () {\n    setFiltered(filterd());\n  }, [usersP]);\n  useEffect(function () {\n    console.log(\"useeffect 2nd\", alluserStatus, filteredUsers, filtered);\n\n    if (filtered && alluserStatus) {\n      onlineU = mergedAray();\n      console.log(\"Online users\", allStatus, alluserStatus, filtered, filteredUsers);\n      setOnlineusers(onlineU);\n    }\n  }, [alluserStatus, filtered]);\n\n  var mergedAray = function mergedAray() {\n    var mergeArray = filtered && filtered.map(function (userItem) {\n      var classesItem = alluserStatus.find(function (item) {\n        return item.id === userItem.id;\n      });\n      return classesItem ? _objectSpread(_objectSpread({}, userItem), classesItem) : _objectSpread(_objectSpread({}, userItem), {}, {\n        onlineStatus: \"offline\"\n      });\n    }); // getOnlineUsrs(mergeArray);\n\n    console.log(\"Online users merged\", mergeArray);\n    return mergeArray;\n  }; // const getOnlineUsrs = (mergeArray) => {\n  //   dispatch(setAllUsers(mergeArray));\n  // };\n\n\n  var addNew = function addNew(item) {\n    var found = false;\n    var foundID;\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\n\n    for (var i = 0; i < recentUsers.length; i++) {\n      if (recentUsers[i].id === item.id) {\n        found = true;\n        foundID = recentUsers[i].id;\n        break;\n      }\n    }\n    /* if contact is present append messages */\n\n\n    if (found) {\n      var objIndex = recentUsers.findIndex(function (obj) {\n        return obj.id == foundID;\n      });\n      dispatch(updateLastMessageTime({\n        id: objIndex,\n        time: dateTime()\n      }));\n    }\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\n\n\n    if (!found) {\n      recentUsers.map(function (ci) {\n        if (!ci.hasOwnProperty(\"mesg\")) {\n          dispatch(removeRecentUser(ci.id));\n        }\n      });\n      dispatch(addNewUSer({\n        id: item.id,\n        first_name: item.first_name,\n        status: item.onlineusers,\n        mesg: \"msg at \".concat(dateTime()),\n        onlineStatus: item.onlineStatus,\n        lastMessageAt: dateTime()\n      }));\n    }\n  };\n\n  var changeChatClick = function changeChatClick(e) {\n    document.querySelectorAll(\".chat-main li\").forEach(function (item) {\n      item.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\n  };\n\n  var addToRoster = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      var jidd, contacts1, length, found, obj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              jidd = item.id + \"@mongoose.mysmartpbx.org\";\n              console.log(\"jid\", jidd);\n              _context.next = 4;\n              return client.getRoster();\n\n            case 4:\n              contacts1 = _context.sent;\n              console.log(\"contacts1\", contacts1);\n              length = contacts1.items.length;\n              found = false;\n              length > 0 && contacts1.items.map(function (user) {\n                if (user.jid === jidd) {\n                  console.log(\"user is in my  roster\");\n                  found = true;\n                }\n              });\n\n              if (!found) {\n                console.log(\"not found\", client);\n                obj = {\n                  jid: jidd,\n                  name: item.first_name,\n                  groups: []\n                };\n                client.updateRosterItem(obj);\n                setTimeout(function () {\n                  client.subscribe(jidd, function () {\n                    return console.log(\"subscrption request sent\");\n                  });\n                  acceptRequest();\n                }, 1000);\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addToRoster(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var acceptRequest = function acceptRequest() {\n    console.log(\"listening\");\n    client.on(\"subscribe\", function (ReceivedPresence) {\n      return client.acceptSubscription(ReceivedPresence.from);\n    });\n  };\n\n  if (!onlineusers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  } else if (!filteredUsers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  } else {\n    var _jsxDEV2;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, (_jsxDEV2 = {\n            type: \"email\",\n            name: \"email\"\n          }, _defineProperty(_jsxDEV2, \"type\", \"search\"), _defineProperty(_jsxDEV2, \"placeholder\", \"Search\"), _defineProperty(_jsxDEV2, \"onChange\", function onChange(e) {\n            return setSearch(e.target.value);\n          }), _jsxDEV2), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-tab\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            tabs: true,\n            id: \"myTab1\",\n            role: \"tablist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n            activeTab: chatSubTab,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-main\",\n              children: onlineusers.filter(function (data) {\n                if (searchTerm == null) {\n                  return data;\n                } else if (data.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return data;\n                }\n              }).map(function (chatlist, i) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\".concat(1 === chatlist.id ? \"active\" : \"\"),\n                  onClick: function onClick(e) {\n                    changeChatClick(e, chatlist);\n                    dispatch(setChatWith(chatlist.first_name));\n                    dispatch(setActiveTab(\"chat\"));\n                    dispatch(chatededUsers(\"new\"));\n                    addNew(chatlist, e);\n                    addToRoster(chatlist);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"profile \".concat(chatlist.onlineStatus),\n                      style: {\n                        backgroundImage: \"url(\".concat(Logo, \")\"),\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center\",\n                        display: \"block\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"bg-img\",\n                        src: Logo,\n                        alt: \"Avatar\",\n                        style: {\n                          display: \"none\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details\",\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: chatlist.first_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"date-status\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ti-pin2\",\n                        onClick: function onClick(e) {\n                          return Tipin(e);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, _this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(form, \"KMe2aNSvlBv8BaN4KjzMpK6rCfY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\nexport default form;","map":{"version":3,"sources":["D:/chat/containers/leftSidebar/contactSearch.js"],"names":["React","useEffect","useSelector","useDispatch","useState","FormGroup","Input","dateTime","Logo","_","Nav","TabContent","fetchUsers","setChatWith","setActiveTab","chatededUsers","addNewUSer","removeRecentUser","updateLastMessageTime","setAllUsers","form","onlineU","dispatch","jid","state","user","currentUser","jidLoggedInUser","split","usersP","users","allusers","filtered","setFiltered","filteredUsers","recentUsers","chatedUsers","searchTerm","setSearch","chatSubTab","setChatSubTab","onlineusers","setOnlineusers","client","alluserStatus","allStatus","setAllStatus","filterd","length","filter","id","console","log","mergedAray","mergeArray","map","userItem","classesItem","find","item","onlineStatus","addNew","found","foundID","i","objIndex","findIndex","obj","time","ci","hasOwnProperty","first_name","status","mesg","lastMessageAt","changeChatClick","e","document","querySelectorAll","forEach","classList","remove","currentTarget","add","querySelector","addToRoster","jidd","getRoster","contacts1","items","name","groups","updateRosterItem","setTimeout","subscribe","acceptRequest","on","ReceivedPresence","acceptSubscription","from","target","value","data","toLowerCase","includes","chatlist","backgroundImage","backgroundSize","backgroundPosition","display","Tipin"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,YAAhC;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,qBAPF,EAQEC,WARF,QASO,2BATP;;;;AAWA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AACd,MAAIC,OAAJ;AACA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,GAAG,GAAGrB,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,WAAX,CAAuBH,GAAlC;AAAA,GAAD,CAAvB;AACA,MAAII,eAAe,GAAGJ,GAAG,IAAIA,GAAG,CAACK,KAAJ,CAAU,GAAV,EAAe,CAAf,CAA7B;AACA,MAAMC,MAAM,GAAG3B,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWK,KAAtB;AAAA,GAAD,CAA1B;AACA,MAAMC,QAAQ,GAAG7B,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWM,QAAtB;AAAA,GAAD,CAA5B;;AACA,kBAAgC3B,QAAQ,CAAC,EAAD,CAAxC;AAAA,MAAO4B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAIC,aAAJ;AAEA,MAAMC,WAAW,GAAGjC,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWW,WAAtB;AAAA,GAAD,CAA/B;;AACA,mBAAgChC,QAAQ,CAAC,IAAD,CAAxC;AAAA,MAAOiC,UAAP;AAAA,MAAmBC,SAAnB;;AACA,mBAAoClC,QAAQ,CAAC,UAAD,CAA5C;AAAA,MAAOmC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsCpC,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOqC,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,MAAM,GAAGzC,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWkB,MAAtB;AAAA,GAAD,CAA1B;AACA,MAAIC,aAAa,GAAG1C,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWmB,aAAtB;AAAA,GAAD,CAA/B;;AACA,mBAAkCxC,QAAQ,CAACwC,aAAD,CAA1C;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBb,IAAAA,aAAa,GACXL,MAAM,CAACmB,MAAP,GAAgB,CAAhB,IACAnB,MAAM,CAAC,CAAD,CAAN,CAAUoB,MAAV,CAAiB,UAACxB,IAAD;AAAA,aAAUA,IAAI,CAACyB,EAAL,KAAYvB,eAAtB;AAAA,KAAjB,CAFF;AAGAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBvB,MAArB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BlB,aAA7B;AAEA,WAAOA,aAAP;AACD,GARD,CAjBc,CA0Bd;;;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBpB,QAAxB,EA3Bc,CA4Bd;AACA;;AAEA/B,EAAAA,SAAS,CAAC,YAAM;AACdgC,IAAAA,WAAW,CAACc,OAAO,EAAR,CAAX;AACD,GAFQ,EAEN,CAAClB,MAAD,CAFM,CAAT;AAIA5B,EAAAA,SAAS,CAAC,YAAM;AACdkD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,aAA7B,EAA4CV,aAA5C,EAA2DF,QAA3D;;AACA,QAAIA,QAAQ,IAAIY,aAAhB,EAA+B;AAC7BvB,MAAAA,OAAO,GAAGgC,UAAU,EAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEEP,SAFF,EAGED,aAHF,EAIEZ,QAJF,EAKEE,aALF;AAOAQ,MAAAA,cAAc,CAACrB,OAAD,CAAd;AACD;AACF,GAbQ,EAaN,CAACuB,aAAD,EAAgBZ,QAAhB,CAbM,CAAT;;AAeA,MAAMqB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,UAAU,GACdtB,QAAQ,IACRA,QAAQ,CAACuB,GAAT,CAAa,UAACC,QAAD,EAAc;AACzB,UAAIC,WAAW,GAAGb,aAAa,CAACc,IAAd,CAAmB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACT,EAAL,KAAYM,QAAQ,CAACN,EAA/B;AAAA,OAAnB,CAAlB;AACA,aAAOO,WAAW,mCACTD,QADS,GACIC,WADJ,oCAETD,QAFS;AAECI,QAAAA,YAAY,EAAE;AAFf,QAAlB;AAGD,KALD,CAFF,CADuB,CAUvB;;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,UAAnC;AACA,WAAOA,UAAP;AACD,GAbD,CAlDc,CAiEd;AACA;AACA;;;AACA,MAAMO,MAAM,GAAG,SAATA,MAAS,CAACF,IAAD,EAAU;AACvB,QAAIG,KAAK,GAAG,KAAZ;AACA,QAAIC,OAAJ;AACA;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,WAAW,CAACa,MAAhC,EAAwCgB,CAAC,EAAzC,EAA6C;AAC3C,UAAI7B,WAAW,CAAC6B,CAAD,CAAX,CAAed,EAAf,KAAsBS,IAAI,CAACT,EAA/B,EAAmC;AACjCY,QAAAA,KAAK,GAAG,IAAR;AACAC,QAAAA,OAAO,GAAG5B,WAAW,CAAC6B,CAAD,CAAX,CAAed,EAAzB;AACA;AACD;AACF;AAED;;;AACA,QAAIY,KAAJ,EAAW;AACT,UAAIG,QAAQ,GAAG9B,WAAW,CAAC+B,SAAZ,CAAsB,UAACC,GAAD;AAAA,eAASA,GAAG,CAACjB,EAAJ,IAAUa,OAAnB;AAAA,OAAtB,CAAf;AACAzC,MAAAA,QAAQ,CAACJ,qBAAqB,CAAC;AAAEgC,QAAAA,EAAE,EAAEe,QAAN;AAAgBG,QAAAA,IAAI,EAAE7D,QAAQ;AAA9B,OAAD,CAAtB,CAAR;AACD;AACD;;;AACA,QAAI,CAACuD,KAAL,EAAY;AACV3B,MAAAA,WAAW,CAACoB,GAAZ,CAAgB,UAACc,EAAD,EAAQ;AACtB,YAAI,CAACA,EAAE,CAACC,cAAH,CAAkB,MAAlB,CAAL,EAAgC;AAC9BhD,UAAAA,QAAQ,CAACL,gBAAgB,CAACoD,EAAE,CAACnB,EAAJ,CAAjB,CAAR;AACD;AACF,OAJD;AAKA5B,MAAAA,QAAQ,CACNN,UAAU,CAAC;AACTkC,QAAAA,EAAE,EAAES,IAAI,CAACT,EADA;AAETqB,QAAAA,UAAU,EAAEZ,IAAI,CAACY,UAFR;AAGTC,QAAAA,MAAM,EAAEb,IAAI,CAAClB,WAHJ;AAITgC,QAAAA,IAAI,mBAAYlE,QAAQ,EAApB,CAJK;AAKTqD,QAAAA,YAAY,EAAED,IAAI,CAACC,YALV;AAMTc,QAAAA,aAAa,EAAEnE,QAAQ;AANd,OAAD,CADJ,CAAR;AAUD;AACF,GAnCD;;AAqCA,MAAMoE,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,EAA2CC,OAA3C,CAAmD,UAACpB,IAAD,EAAU;AAC3DA,MAAAA,IAAI,CAACqB,SAAL,CAAeC,MAAf,CAAsB,QAAtB;AACD,KAFD;AAGAL,IAAAA,CAAC,CAACM,aAAF,CAAgBF,SAAhB,CAA0BG,GAA1B,CAA8B,QAA9B;AACAN,IAAAA,QAAQ,CAACO,aAAT,CAAuB,iBAAvB,EAA0CJ,SAA1C,CAAoDG,GAApD,CAAwD,aAAxD;AACD,GAND;;AAQA,MAAME,WAAW;AAAA,wEAAG,iBAAO1B,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACd2B,cAAAA,IADc,GACP3B,IAAI,CAACT,EAAL,GAAU,0BADH;AAElBC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBkC,IAAnB;AAFkB;AAAA,qBAGI3C,MAAM,CAAC4C,SAAP,EAHJ;;AAAA;AAGdC,cAAAA,SAHc;AAIlBrC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBoC,SAAzB;AACIxC,cAAAA,MALc,GAKLwC,SAAS,CAACC,KAAV,CAAgBzC,MALX;AAMdc,cAAAA,KANc,GAMN,KANM;AAOlBd,cAAAA,MAAM,GAAG,CAAT,IACEwC,SAAS,CAACC,KAAV,CAAgBlC,GAAhB,CAAoB,UAAC9B,IAAD,EAAU;AAC5B,oBAAIA,IAAI,CAACF,GAAL,KAAa+D,IAAjB,EAAuB;AACrBnC,kBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAU,kBAAAA,KAAK,GAAG,IAAR;AACD;AACF,eALD,CADF;;AAQA,kBAAI,CAACA,KAAL,EAAY;AACVX,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,MAAzB;AACIwB,gBAAAA,GAFM,GAEA;AACR5C,kBAAAA,GAAG,EAAE+D,IADG;AAERI,kBAAAA,IAAI,EAAE/B,IAAI,CAACY,UAFH;AAGRoB,kBAAAA,MAAM,EAAE;AAHA,iBAFA;AAOVhD,gBAAAA,MAAM,CAACiD,gBAAP,CAAwBzB,GAAxB;AACA0B,gBAAAA,UAAU,CAAC,YAAM;AACflD,kBAAAA,MAAM,CAACmD,SAAP,CAAiBR,IAAjB,EAAuB;AAAA,2BAAMnC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA,mBAAvB;AACA2C,kBAAAA,aAAa;AACd,iBAHS,EAGP,IAHO,CAAV;AAID;;AA3BiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXV,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA6BA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B5C,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAT,IAAAA,MAAM,CAACqD,EAAP,CAAU,WAAV,EAAuB,UAACC,gBAAD;AAAA,aACrBtD,MAAM,CAACuD,kBAAP,CAA0BD,gBAAgB,CAACE,IAA3C,CADqB;AAAA,KAAvB;AAGD,GALD;;AAOA,MAAI,CAAC1D,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACP,aAAL,EAAoB;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AAAA;;AACL,wBACE;AAAA,6BACE;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC;AAFP,+CAGO,QAHP,4CAIc,QAJd,yCAKY,kBAAC0C,CAAD;AAAA,mBAAOtC,SAAS,CAACsC,CAAC,CAACwB,MAAF,CAASC,KAAV,CAAhB;AAAA,WALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,IAAI,MAAT;AAAU,YAAA,EAAE,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAE9D,UAAvB;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,wBACGE,WAAW,CACTQ,MADF,CACS,UAACqD,IAAD,EAAU;AAChB,oBAAIjE,UAAU,IAAI,IAAlB,EAAwB;AACtB,yBAAOiE,IAAP;AACD,iBAFD,MAEO,IACLA,IAAI,CAAC/B,UAAL,CACGgC,WADH,GAEGC,QAFH,CAEYnE,UAAU,CAACkE,WAAX,EAFZ,CADK,EAIL;AACA,yBAAOD,IAAP;AACD;AACF,eAXF,EAYE/C,GAZF,CAYM,UAACkD,QAAD,EAAWzC,CAAX,EAAiB;AACpB,oCACE;AACE,kBAAA,SAAS,YAAK,MAAMyC,QAAQ,CAACvD,EAAf,GAAoB,QAApB,GAA+B,EAApC,CADX;AAGE,kBAAA,OAAO,EAAE,iBAAC0B,CAAD,EAAO;AACdD,oBAAAA,eAAe,CAACC,CAAD,EAAI6B,QAAJ,CAAf;AACAnF,oBAAAA,QAAQ,CAACT,WAAW,CAAC4F,QAAQ,CAAClC,UAAV,CAAZ,CAAR;AACAjD,oBAAAA,QAAQ,CAACR,YAAY,CAAC,MAAD,CAAb,CAAR;AACAQ,oBAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACA8C,oBAAAA,MAAM,CAAC4C,QAAD,EAAW7B,CAAX,CAAN;AACAS,oBAAAA,WAAW,CAACoB,QAAD,CAAX;AACD,mBAVH;AAAA,yCAYE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACE;AACE,sBAAA,SAAS,oBAAaA,QAAQ,CAAC7C,YAAtB,CADX;AAEE,sBAAA,KAAK,EAAE;AACL8C,wBAAAA,eAAe,gBAASlG,IAAT,MADV;AAELmG,wBAAAA,cAAc,EAAE,OAFX;AAGLC,wBAAAA,kBAAkB,EAAE,QAHf;AAILC,wBAAAA,OAAO,EAAE;AAJJ,uBAFT;AAAA,6CASE;AACE,wBAAA,SAAS,EAAC,QADZ;AAEE,wBAAA,GAAG,EAAErG,IAFP;AAGE,wBAAA,GAAG,EAAC,QAHN;AAIE,wBAAA,KAAK,EAAE;AAAEqG,0BAAAA,OAAO,EAAE;AAAX;AAJT;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,6BADF,eAkBE;AAAK,sBAAA,SAAS,EAAC,SAAf;AAAA,6CACE;AAAA,kCAAKJ,QAAQ,CAAClC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAlBF,eAsBE;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,6CACE;AACE,wBAAA,SAAS,EAAC,SADZ;AAEE,wBAAA,OAAO,EAAE,iBAACK,CAAD;AAAA,iCAAOkC,KAAK,CAAClC,CAAD,CAAZ;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF,mBAEOZ,CAFP;AAAA;AAAA;AAAA;AAAA,yBADF;AAmED,eAhFF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAuGD;AACF;;GAlQQ5C,I;UAEUjB,W,EACLD,W,EAEGA,W,EACEA,W,EAIGA,W,EAILA,W,EACKA,W;;;AAoPtB,eAAekB,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport dateTime from \"./datetime\";\r\nimport Logo from \"./1.jpg\";\r\nimport _ from \"lodash\";\r\nimport { Nav, TabContent } from \"reactstrap\";\r\nimport {\r\n  fetchUsers,\r\n  setChatWith,\r\n  setActiveTab,\r\n  chatededUsers,\r\n  addNewUSer,\r\n  removeRecentUser,\r\n  updateLastMessageTime,\r\n  setAllUsers,\r\n} from \"../../redux/actions/index\";\r\n\r\nfunction form() {\r\n  let onlineU;\r\n  const dispatch = useDispatch();\r\n  const jid = useSelector((state) => state.user.currentUser.jid);\r\n  var jidLoggedInUser = jid && jid.split(\"@\")[0];\r\n  const usersP = useSelector((state) => state.user.users);\r\n  const allusers = useSelector((state) => state.user.allusers);\r\n  const [filtered, setFiltered] = useState(\"\");\r\n  let filteredUsers;\r\n\r\n  const recentUsers = useSelector((state) => state.user.chatedUsers);\r\n  const [searchTerm, setSearch] = useState(null);\r\n  const [chatSubTab, setChatSubTab] = useState(\"contacts\");\r\n  const [onlineusers, setOnlineusers] = useState([]);\r\n  const client = useSelector((state) => state.user.client);\r\n  let alluserStatus = useSelector((state) => state.user.alluserStatus);\r\n  const [allStatus, setAllStatus] = useState(alluserStatus);\r\n  const filterd = () => {\r\n    filteredUsers =\r\n      usersP.length > 0 &&\r\n      usersP[0].filter((user) => user.id !== jidLoggedInUser);\r\n    console.log(\"userp\", usersP);\r\n    console.log(\"filteredUsers\", filteredUsers);\r\n\r\n    return filteredUsers;\r\n  };\r\n  // dispatch(fetchUsers());\r\n  console.log(\"filtered\", filtered);\r\n  // useEffect(() => {\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setFiltered(filterd());\r\n  }, [usersP]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useeffect 2nd\", alluserStatus, filteredUsers, filtered);\r\n    if (filtered && alluserStatus) {\r\n      onlineU = mergedAray();\r\n      console.log(\r\n        \"Online users\",\r\n        allStatus,\r\n        alluserStatus,\r\n        filtered,\r\n        filteredUsers\r\n      );\r\n      setOnlineusers(onlineU);\r\n    }\r\n  }, [alluserStatus, filtered]);\r\n\r\n  const mergedAray = () => {\r\n    const mergeArray =\r\n      filtered &&\r\n      filtered.map((userItem) => {\r\n        let classesItem = alluserStatus.find((item) => item.id === userItem.id);\r\n        return classesItem\r\n          ? { ...userItem, ...classesItem }\r\n          : { ...userItem, onlineStatus: \"offline\" };\r\n      });\r\n\r\n    // getOnlineUsrs(mergeArray);\r\n    console.log(\"Online users merged\", mergeArray);\r\n    return mergeArray;\r\n  };\r\n\r\n  // const getOnlineUsrs = (mergeArray) => {\r\n  //   dispatch(setAllUsers(mergeArray));\r\n  // };\r\n  const addNew = (item) => {\r\n    let found = false;\r\n    let foundID;\r\n    /* SEARCH CONTACT IN CHAT TAB  RETURN:TRUE IF PRESENT,RETURN FALSE IF NOT PRESENT */\r\n    for (var i = 0; i < recentUsers.length; i++) {\r\n      if (recentUsers[i].id === item.id) {\r\n        found = true;\r\n        foundID = recentUsers[i].id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* if contact is present append messages */\r\n    if (found) {\r\n      let objIndex = recentUsers.findIndex((obj) => obj.id == foundID);\r\n      dispatch(updateLastMessageTime({ id: objIndex, time: dateTime() }));\r\n    }\r\n    /* If not present in chat section.if any other is present without mesg attribute remove first then add*/\r\n    if (!found) {\r\n      recentUsers.map((ci) => {\r\n        if (!ci.hasOwnProperty(\"mesg\")) {\r\n          dispatch(removeRecentUser(ci.id));\r\n        }\r\n      });\r\n      dispatch(\r\n        addNewUSer({\r\n          id: item.id,\r\n          first_name: item.first_name,\r\n          status: item.onlineusers,\r\n          mesg: `msg at ${dateTime()}`,\r\n          onlineStatus: item.onlineStatus,\r\n          lastMessageAt: dateTime(),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeChatClick = (e) => {\r\n    document.querySelectorAll(\".chat-main li\").forEach((item) => {\r\n      item.classList.remove(\"active\");\r\n    });\r\n    e.currentTarget.classList.add(\"active\");\r\n    document.querySelector(\".sidebar-toggle\").classList.add(\"mobile-menu\");\r\n  };\r\n\r\n  const addToRoster = async (item) => {\r\n    let jidd = item.id + \"@mongoose.mysmartpbx.org\";\r\n    console.log(\"jid\", jidd);\r\n    let contacts1 = await client.getRoster();\r\n    console.log(\"contacts1\", contacts1);\r\n    let length = contacts1.items.length;\r\n    let found = false;\r\n    length > 0 &&\r\n      contacts1.items.map((user) => {\r\n        if (user.jid === jidd) {\r\n          console.log(\"user is in my  roster\");\r\n          found = true;\r\n        }\r\n      });\r\n\r\n    if (!found) {\r\n      console.log(\"not found\", client);\r\n      let obj = {\r\n        jid: jidd,\r\n        name: item.first_name,\r\n        groups: [],\r\n      };\r\n      client.updateRosterItem(obj);\r\n      setTimeout(() => {\r\n        client.subscribe(jidd, () => console.log(\"subscrption request sent\"));\r\n        acceptRequest();\r\n      }, 1000);\r\n    }\r\n  };\r\n  const acceptRequest = () => {\r\n    console.log(\"listening\");\r\n    client.on(\"subscribe\", (ReceivedPresence) =>\r\n      client.acceptSubscription(ReceivedPresence.from)\r\n    );\r\n  };\r\n\r\n  if (!onlineusers) {\r\n    return <div>Loading...</div>;\r\n  } else if (!filteredUsers) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <form>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <div className=\"theme-tab\">\r\n            <Nav tabs id=\"myTab1\" role=\"tablist\"></Nav>\r\n            <TabContent activeTab={chatSubTab}>\r\n              <ul className=\"chat-main\">\r\n                {onlineusers\r\n                  .filter((data) => {\r\n                    if (searchTerm == null) {\r\n                      return data;\r\n                    } else if (\r\n                      data.first_name\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase())\r\n                    ) {\r\n                      return data;\r\n                    }\r\n                  })\r\n                  .map((chatlist, i) => {\r\n                    return (\r\n                      <li\r\n                        className={`${1 === chatlist.id ? \"active\" : \"\"}`}\r\n                        key={i}\r\n                        onClick={(e) => {\r\n                          changeChatClick(e, chatlist);\r\n                          dispatch(setChatWith(chatlist.first_name));\r\n                          dispatch(setActiveTab(\"chat\"));\r\n                          dispatch(chatededUsers(\"new\"));\r\n                          addNew(chatlist, e);\r\n                          addToRoster(chatlist);\r\n                        }}\r\n                      >\r\n                        <div className=\"chat-box\">\r\n                          <div\r\n                            className={`profile ${chatlist.onlineStatus}`}\r\n                            style={{\r\n                              backgroundImage: `url(${Logo})`,\r\n                              backgroundSize: \"cover\",\r\n                              backgroundPosition: \"center\",\r\n                              display: \"block\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              className=\"bg-img\"\r\n                              src={Logo}\r\n                              alt=\"Avatar\"\r\n                              style={{ display: \"none\" }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"details\">\r\n                            <h5>{chatlist.first_name}</h5>\r\n                            {/* <h6>{chatlist.mesg}</h6> */}\r\n                          </div>\r\n                          <div className=\"date-status\">\r\n                            <i\r\n                              className=\"ti-pin2\"\r\n                              onClick={(e) => Tipin(e)}\r\n                            ></i>\r\n                            {/* <h6>{chatlist.lastSeenDate}</h6> */}\r\n                            {/* {chatlist.status === \"Sending\" || \"Failed\" || \"Seen\" ? (\r\n                      <h6\r\n                        className={`${\r\n                          chatlist.status === \"Sending\"\r\n                            ? \"font-dark\"\r\n                            : chatlist.status === \"Failed\"\r\n                            ? \"font-danger\"\r\n                            : \"font-success\"\r\n                        }  status`}\r\n                      >\r\n                        {chatlist.status === \"8\" ? \"\" : chatlist.status}\r\n                      </h6>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                            {/* {chatlist.status === \"8\" ? (\r\n                      <div className=\"badge badge-primary sm\">\r\n                        {chatlist.status}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </TabContent>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}